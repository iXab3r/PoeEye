<controls:MetroWindow x:Class="PoeEyeUi.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:PoeEyeUi"
        xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls"
        mc:Ignorable="d"
        Title="MainWindow" 
                      MinWidth="400" 
                      MinHeight="300" 
                      Width="800" 
                      Height="600" 
                      d:DataContext="{d:DesignInstance local:MainWindowViewModel}">

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <controls:MetroContentControl Grid.Row="0">
            <StackPanel>
                <Button Width="50"
                        Height="50"
                        Style="{DynamicResource MetroCircleButtonStyle}"
                        Command="{Binding CreateNewTabCommand}">

                    <Rectangle Width="20"
                               Height="20"
                               Fill="{Binding Path=Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}">
                        <Rectangle.OpacityMask>
                            <VisualBrush Stretch="Fill"
                                         Visual="{DynamicResource appbar_newspaper_create}" />
                        </Rectangle.OpacityMask>
                    </Rectangle>
                </Button>
            </StackPanel>
        </controls:MetroContentControl>

        <controls:MetroTabControl Grid.Row="1"
                                  ItemsSource="{Binding TabsList}" 
                                  SelectedItem="{Binding SelectedItem}"
                                  controls:TabControlHelper.IsUnderlined="True"
                                  controls:TabControlHelper.Transition="RightReplace" >
            <controls:MetroTabControl.ItemTemplate>
                <DataTemplate DataType="{x:Type local:MainWindowTabViewModel}">
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="{Binding TabName}"/>
                        <Button Width="30" Height="30"
                                Style="{DynamicResource MetroCircleButtonStyle}"
                                Command="{Binding RelativeSource={RelativeSource AncestorType={x:Type controls:MetroTabControl}}, Path=DataContext.CloseTabCommand}"
                                CommandParameter="{Binding}">
                            <Rectangle Width="10" Height="10" Fill="{Binding Path=Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}">
                                <Rectangle.OpacityMask>
                                    <VisualBrush Stretch="Fill" Visual="{DynamicResource appbar_xbox}" />
                                </Rectangle.OpacityMask>
                            </Rectangle>
                        </Button>
                    </StackPanel>
                </DataTemplate>
            </controls:MetroTabControl.ItemTemplate>
        </controls:MetroTabControl>

        <StatusBar Grid.Row="2">
            <StatusBar.Resources>
                <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource MetroTextBlock}">
                    <Setter Property="FontSize" Value="18"/>
                </Style>
            </StatusBar.Resources>
            <StatusBar.Items>
                <StackPanel Orientation="Horizontal" Visibility="{Binding SelectedItem.IsBusy, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <controls:ProgressRing Height="20" Width="20" IsActive="true" Foreground="{StaticResource TextBrush}"  />
                    <TextBlock Text="Updating..."/>
                </StackPanel>

                <TextBlock Text="{Binding SelectedItem.LastUpdateTimestamp, Mode=OneWay, StringFormat='Last update: {0:MMM dd HH:mm:ss.fff}'}"/>
                <TextBlock HorizontalAlignment="Right" Text="{Binding SelectedItem.RecheckTimeout, Mode=OneWay, StringFormat='Recheck timeout: {0}'}"/>
            </StatusBar.Items>
        </StatusBar>
    </Grid>
</controls:MetroWindow>
    

