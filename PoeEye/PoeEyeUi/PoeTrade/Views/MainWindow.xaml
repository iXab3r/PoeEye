<controls:MetroWindow x:Class="PoeEyeUi.PoeTrade.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:PoeEyeUi"
        xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls"
        xmlns:viewModels="clr-namespace:PoeEyeUi.PoeTrade.ViewModels"
        xmlns:metroModels="clr-namespace:PoeEyeUi.MetroModels"
        xmlns:utilities="clr-namespace:PoeEyeUi.Utilities"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        mc:Ignorable="d"
        Title="{Binding MainWindowTitle}" 
        MinWidth="1000" 
        MinHeight="800" 
        Width="1100" 
        Height="800" 
        d:DataContext="{d:DesignInstance viewModels:MainWindowViewModel}"
        BorderThickness="1" BorderBrush="{StaticResource AccentColorBrush}"
        metroModels:DialogParticipation.Register="{Binding}">

    <Grid>

        <utilities:DataPiping.DataPipes>
            <utilities:DataPipeCollection>
                <utilities:DataPipe Source="{Binding RelativeSource={RelativeSource AncestorType={x:Type controls:MetroWindow}}, Path=IsActive}"
                         Target="{Binding Path=IsMainWindowActive, Mode=OneWayToSource}"/>
            </utilities:DataPipeCollection>
        </utilities:DataPiping.DataPipes>

        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <ContentControl Grid.Row="0">
            <StackPanel HorizontalAlignment="Left" Orientation="Horizontal">

            </StackPanel>
        </ContentControl>

        <Border Grid.Row="1">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <ListBox Grid.Column="0"
                         ItemsSource="{Binding TabsList}" 
                         SelectedItem="{Binding SelectedItem}"
                         SelectionMode="Single"
                         Margin="10,10,5,10"
                         HorizontalContentAlignment="Stretch">
                    <ListBox.Resources>
                        <Style TargetType="ListBoxItem" BasedOn="{StaticResource ListBoxAsTabControl}" />
                    </ListBox.Resources>
                    <ListBox.ItemTemplate>
                        <DataTemplate DataType="{x:Type viewModels:MainWindowTabViewModel}">
                            <Grid Margin="0,3,0,3">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>

                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>

                                <!-- tab header content -->

                                <DockPanel Grid.Row="0" Grid.Column="0" >
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>

                                        <Rectangle Grid.Column="0"
                                                   Height="20" Width="20" Margin="5"
                                           Visibility="{Binding TradesListViewModel.LastUpdateException, Converter={StaticResource NullNotNullToVisibilityConverter}}"
                                           ToolTip="{Binding TradesListViewModel.LastUpdateException, Converter={StaticResource ExceptionToMessageConverter}}">
                                            <Rectangle.Fill>
                                                <VisualBrush Stretch="Fill" Visual="{DynamicResource appbar_transit_hazard}"  />
                                            </Rectangle.Fill>
                                        </Rectangle>

                                        <Button Grid.Column="1" 
                                                Margin="10,0"
                                                Style="{DynamicResource MetroCircleButtonStyle}"
                                                Width="40" Height="40"
                                                HorizontalAlignment="Right"
                                                Command="{Binding SearchCommand}"
                                                CommandParameter="{Binding QueryViewModel.PoeQueryBuilder}" >
                                            <i:Interaction.Triggers>
                                                <i:EventTrigger EventName="Click">
                                                    <utilities:SetPropertyAction PropertyName="Visibility" 
                                                                                 PropertyValue="{x:Static Visibility.Collapsed}"
                                                                                 TargetObject="{Binding RelativeSource={RelativeSource AncestorType={x:Type Button}, Mode=FindAncestor}}"/>
                                                </i:EventTrigger>
                                            </i:Interaction.Triggers>

                                            <Rectangle Width="20" Height="20" 
                                                       Fill="{Binding Path=Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}">
                                                <Rectangle.OpacityMask>
                                                    <VisualBrush Stretch="Fill" Visual="{DynamicResource appbar_magnify_forward}" />
                                                </Rectangle.OpacityMask>
                                            </Rectangle>
                                        </Button>
                                    </Grid>
                                </DockPanel>

                                <TextBlock Grid.Row="0" Grid.Column="1" 
                                           Text="{Binding TabName}" 
                                           MaxWidth="200"    
                                           FontSize="16" TextWrapping="Wrap" VerticalAlignment="Center"/>

                                <Border Grid.Row="0" Grid.Column="2"
                                        Margin="10,0,10,0">
                                    <Border Height="30" VerticalAlignment="Center">
                                        <Border.Style>
                                            <Style TargetType="Border">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding HasNewTrades}" Value="True">
                                                        <Setter Property="BorderThickness" Value="0,0,0,2"/>
                                                        <Setter Property="BorderBrush" Value="{StaticResource PoeTradeNewItemColor}"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Border.Style>
                                        <TextBlock 
                                           FontSize="16" 
                                           VerticalAlignment="Center"
                                           HorizontalAlignment="Right" >
                                            <TextBlock.Inlines>
                                                <Run Text="{Binding NewItemsCount, Mode=OneWay, StringFormat='{}{0,2}'}" Foreground="{StaticResource PoeTradeNewItemColor}"/> /
                                                <Run Text="{Binding RemovedItemsCount, Mode=OneWay, StringFormat='{}{0,2}'}" Foreground="{StaticResource PoeTradeRemovedItemColor}"/> /
                                                <Run Text="{Binding NormalItemsCount, Mode=OneWay, StringFormat='{}{0,2}'}"/>
                                            </TextBlock.Inlines>
                                        </TextBlock>
                                    </Border>
                                </Border>



                                <StackPanel Grid.Row="0" Grid.Column="3" 
                                            Orientation="Horizontal">
                                    <ToggleButton Width="40" Height="40"
                                                  Style="{DynamicResource MetroCircleToggleButtonStyle}"
                                                  ToolTip="Audio notifications for this tab"
                                                  IsChecked="{Binding AudioNotificationEnabled}" >
                                        <Rectangle Width="20" Height="20" 
                                                   Fill="{Binding Path=Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ToggleButton}}}">
                                            <Rectangle.OpacityMask>
                                                <VisualBrush Stretch="Fill" Visual="{DynamicResource appbar_speakerphone}" />
                                            </Rectangle.OpacityMask>
                                        </Rectangle>
                                    </ToggleButton>

                                    <Button Width="24" Height="24"
                                            Style="{StaticResource MetroCircleButtonStyle}"
                                            HorizontalAlignment="Right"
                                            Command="{Binding RelativeSource={RelativeSource AncestorType={x:Type ListBox}}, Path=DataContext.CloseTabCommand}"
                                            CommandParameter="{Binding}">
                                        <Rectangle Width="8" Height="8" 
                                                   Fill="{Binding Path=Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}">
                                            <Rectangle.OpacityMask>
                                                <VisualBrush Stretch="Fill" Visual="{DynamicResource appbar_close}" />
                                            </Rectangle.OpacityMask>
                                        </Rectangle>
                                    </Button>
                                </StackPanel>

                                <controls:MetroProgressBar Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="4" 
                                                       Foreground="{StaticResource TextBrush}"  
                                                       IsIndeterminate="true"
                                                       Visibility="{Binding IsBusy, Converter={StaticResource BooleanToVisibilityConverter}}" />
                            </Grid>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>

                <ContentControl Grid.Column="1" 
                                Margin="5,10,10,10"
                                Content="{Binding SelectedItem}"/>
            </Grid>
        </Border>


        <Border Grid.Row="2" BorderThickness="0,1,0,0" BorderBrush="{StaticResource AccentColorBrush}" Margin="5,1,10,5">
            <Border.Resources>
                <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource MetroTextBlock}">
                    <Setter Property="FontSize" Value="16"/>
                </Style>
            </Border.Resources>
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"></ColumnDefinition>
                    <ColumnDefinition Width="*"></ColumnDefinition>
                    <ColumnDefinition Width="Auto"></ColumnDefinition>
                    <ColumnDefinition Width="Auto"></ColumnDefinition>
                </Grid.ColumnDefinitions>

                <StackPanel Grid.Column="0" Orientation="Horizontal" Visibility="{Binding SelectedItem.IsBusy, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <controls:ProgressRing Height="20" Width="20" IsActive="true" Foreground="{StaticResource TextBrush}"  />
                    <TextBlock Text="Updating..."/>
                </StackPanel>

                <TextBlock Grid.Column="1"  
                           Margin="10,0,0,0" 
                           Visibility="{Binding SelectedItem.TradesListViewModel.QueryInfo, Converter={StaticResource NullNotNullToVisibilityConverter}}"
                           Text="{Binding SelectedItem.TradesListViewModel.TimeSinceLastUpdate.TotalSeconds, Mode=OneWay, StringFormat='Elapsed since last update: {0:F0}s'}"/>

                <Slider Grid.Column="2" 
                        Width="150"
                        Margin="10,0,0,0" 
                        Minimum="30"
                        Maximum="300"
                        Value="{Binding SelectedItem.RecheckTimeoutInSeconds}"/>

                <TextBlock Grid.Column="3"  
                           Margin="10,0,0,0" Text="{Binding SelectedItem.RecheckTimeoutInSeconds, Mode=OneWay, StringFormat='Recheck timeout: {0:F0}s'}"/>

            </Grid>
        </Border>


    </Grid>

    <controls:MetroWindow.LeftWindowCommands>
        <controls:WindowCommands>
            <StackPanel Orientation="Horizontal">

                <Button 
                        ToolTip="Create new tab"
                        Command="{Binding CreateNewTabCommand}"
                        Content="Create new tab"
                        FontWeight="Bold">
                </Button>
            </StackPanel>

        </controls:WindowCommands>

    </controls:MetroWindow.LeftWindowCommands>

    <controls:MetroWindow.RightWindowCommands>
        <controls:WindowCommands>
            <StackPanel Orientation="Horizontal">
                <controls:ProgressRing Height="20" Width="20" IsActive="true" 
                                       Foreground="{StaticResource TextBrush}" 
                                       Visibility="{Binding ApplicationUpdater.IsBusy, Converter={StaticResource BooleanToVisibilityConverter}}" />
                <Button Command="{Binding ApplicationUpdater.CheckForUpdatesCommand}"
                    CommandParameter="{Binding}"
                    IsEnabled="{Binding ApplicationUpdater.IsBusy, Converter={StaticResource InvertedBoolToVisibilityConverter}}"
                    Content="Check for updates" />

                <StackPanel Orientation="Horizontal" Height="24">
                    <TextBlock Text="Audio:" VerticalAlignment="Center"/>
                    <CheckBox Height="16" Width="16" Opacity="0.5" Margin="5,0,0,0"
                              VerticalAlignment="Center" VerticalContentAlignment="Center"
                              ToolTip="Audio notification for new items" 
                              IsChecked="{Binding AudioNotificationsEnabled}"/>
                </StackPanel>
            </StackPanel>
        </controls:WindowCommands>
    </controls:MetroWindow.RightWindowCommands>
</controls:MetroWindow>
    

