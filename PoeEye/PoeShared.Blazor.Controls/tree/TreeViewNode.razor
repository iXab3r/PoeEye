@namespace PoeShared.Blazor.Controls
@inherits BlazorReactiveComponent
@typeparam TItem


<ReactiveSection Trackers="@(new() {this.WhenAnyValue(x => x.RealDisplay, x => x.IsTargetContainer, x => x.IsTargetBottom)})">
    @if (RealDisplay)
    {
        <CascadingValue Value="this" Name="SelfNode">
            <div @key="NodeId" class="@classMapper.Class" style="@Style">

                <TreeViewIndent TreeLevel="@TreeLevel" TItem="TItem"></TreeViewIndent>

                <TreeViewNodeSwitcher OnSwitcherClick="@OnSwitcherClick" TItem="TItem"></TreeViewNodeSwitcher>

                <TreeViewNodeTitle TItem="TItem"></TreeViewNodeTitle>
            </div>
        </CascadingValue>
    }
</ReactiveSection>

<CascadingValue Value="this" Name="Node">
    @if (DataItem != null && ChildContent == null && Nodes == null)
    {
        foreach (var item in ChildDataItems)
        {
            <TreeViewNode DataItem="@item" @key="item.GetHashCode()"></TreeViewNode>
        }
    }
    else if (ChildContent != null)
    {
        @ChildContent
    }
    else
    {
        @Nodes
    }
</CascadingValue>