@namespace PoeShared.Blazor.Controls
@inherits BlazorReactiveComponent
@typeparam TItem

@if (Draggable)
{
    <span class="@TitleClassMapper.Class" 
          title="@SelfNode.Title" 
          @onclick="@(EventUtil.AsNonRenderingEventHandler<MouseEventArgs>(OnClick))" 
          @ondblclick="@(EventUtil.AsNonRenderingEventHandler<MouseEventArgs>(OnDblClick))" 
          @oncontextmenu="@(EventUtil.AsNonRenderingEventHandler<MouseEventArgs>(OnContextMenu))" @oncontextmenu:stopPropagation="@TreeComponent.OnContextMenu.HasDelegate" @oncontextmenu:preventDefault="@TreeComponent.OnContextMenu.HasDelegate"
          @ondragover="@OnDragOver" @ondragover:preventDefault
          @ondragleave="@(EventUtil.AsNonRenderingEventHandler<DragEventArgs>(OnDragLeave))" 
          @ondragenter="@(EventUtil.AsNonRenderingEventHandler<DragEventArgs>(OnDragEnter))"
          @ondrop="@(EventUtil.AsNonRenderingEventHandler<DragEventArgs>(OnDrop))" @ondrop:preventDefault
          @ondragstart="@(EventUtil.AsNonRenderingEventHandler<DragEventArgs>(OnDragStart))" 
          @ondragend="@(EventUtil.AsNonRenderingEventHandler<DragEventArgs>(OnDragEnd))" 
          draggable="true"
          aria-grabbed="true">
        @if (TreeComponent.TitleIconTemplate != null && TreeComponent.ShowIcon)
        {
            <span class="ant-tree-iconEle @(IsSwitcherOpen ? "ant-tree-icon__open" : "") @(IsSwitcherClose ? "ant-tree-icon__close" : "") ">
                <span class="ant-tree-iconEle ant-tree-icon__customize">
                    @TreeComponent.TitleIconTemplate(SelfNode)
                </span>
            </span>
        }
        else if (string.IsNullOrWhiteSpace(SelfNode.Icon) == false && TreeComponent.ShowIcon)
        {
            <span class="ant-tree-iconEle @(IsSwitcherOpen ? "ant-tree-icon__open" : "") @(IsSwitcherClose ? "ant-tree-icon__close" : "") ">
                <span class="ant-tree-iconEle ant-tree-icon__customize">
                    @if (string.IsNullOrWhiteSpace(SelfNode.Icon) == false)
                    {
                        <Icon Type="@SelfNode.Icon" Theme="outline"/>
                    }
                </span>
            </span>
        }
        @if (TreeComponent.TitleTemplate != null)
        {
            @TreeComponent.TitleTemplate(SelfNode)
        }
        else
        {
            <span class="ant-tree-title" style="pointer-events: none;">
                @if (SelfNode.TitleTemplate != null)
                {
                    @SelfNode.TitleTemplate
                }
                else
                {
                    @SelfNode.Title
                }
            </span>
        }
        @if (SelfNode.DragTarget)
        {
            <div class="ant-tree-drop-indicator" style="left:@(SelfNode.IsTargetBottom ? "4px" : "28px");right:0;bottom:-3px;"></div>
        }
    </span>
}
else
{
    <span class="@TitleClassMapper.Class" 
          title="@SelfNode.Title" 
          @onclick="@OnClick" 
          @ondblclick="@OnDblClick"
          @oncontextmenu="@OnContextMenu" @oncontextmenu:preventDefault="TreeComponent.OnContextMenu.HasDelegate">
        @if (TreeComponent.TitleIconTemplate != null && TreeComponent.ShowIcon)
        {
            <span class="ant-tree-iconEle @(IsSwitcherOpen ? "ant-tree-icon__open" : "") @(IsSwitcherClose ? "ant-tree-icon__close" : "") ">
                <span class="ant-tree-iconEle ant-tree-icon__customize">
                    @TreeComponent.TitleIconTemplate(SelfNode)
                </span>
            </span>
        }
        else if ((!string.IsNullOrWhiteSpace(SelfNode.Icon) || SelfNode.IconTemplate != null) && TreeComponent.ShowIcon)
        {
            <span class="ant-tree-iconEle @(IsSwitcherOpen ? "ant-tree-icon__open" : "") @(IsSwitcherClose ? "ant-tree-icon__close" : "") ">
                <span class="ant-tree-iconEle ant-tree-icon__customize">
                    @if (SelfNode.IconTemplate != null)
                    {
                        @SelfNode.IconTemplate(SelfNode)
                    }
                    else if (!string.IsNullOrWhiteSpace(SelfNode.Icon))
                    {
                        <Icon Type="@SelfNode.Icon" Theme="outline"/>
                    }
                </span>
            </span>
        }
        @if (TreeComponent.TitleTemplate != null)
        {
            @TreeComponent.TitleTemplate(SelfNode)
        }
        else if (SelfNode.TitleTemplate != null)
        {
            @SelfNode.TitleTemplate
        }
        else
        {
            <span class="ant-tree-title">
                @SelfNode.Title
            </span>
        }
        @if (SelfNode.DragTarget)
        {
            <div class="ant-tree-drop-indicator" style="left:@(SelfNode.IsTargetBottom ? "4px" : "28px");right:0;bottom:-3px;"></div>
        }
    </span>
}