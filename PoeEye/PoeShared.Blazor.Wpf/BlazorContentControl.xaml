<scaffolding:SharedResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                              xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                              xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                              xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                              xmlns:wpf="clr-namespace:PoeShared.Blazor.Wpf"
                              xmlns:scaffolding="clr-namespace:PoeShared.Blazor.Wpf.Scaffolding"
                              xmlns:converters="clr-namespace:PoeShared.Blazor.Wpf.Converters"
                              mc:Ignorable="d">
    <ControlTemplate x:Key="BlazorContentControlErrorTemplate" TargetType="{x:Type wpf:BlazorContentControl}">
        <Border>
            <StackPanel Orientation="Vertical">
                <Border BorderBrush="IndianRed" BorderThickness="0 0 0 1">
                    <TextBlock Foreground="IndianRed" Text="Render exception" />
                </Border>
                <Button
                    Command="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ReloadCommand}"
                    Content="Try to recover" HorizontalAlignment="Left" />
                <Border Padding="5">
                    <TextBox
                        IsReadOnly="True"
                        Background="Transparent"
                        BorderThickness="0"
                        Height="NaN"
                        Width="NaN"
                        VerticalScrollBarVisibility="Auto"
                        VerticalContentAlignment="Stretch"
                        TextWrapping="Wrap"
                        Foreground="Coral"
                        Text="{Binding  RelativeSource={RelativeSource TemplatedParent}, Path=UnhandledExceptionMessage, Mode=OneWay}" />
                </Border>
            </StackPanel>
        </Border>
    </ControlTemplate>

    <ControlTemplate x:Key="BlazorContentControlTemplate" TargetType="{x:Type wpf:BlazorContentControl}">
        <Grid Background="Transparent">
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Grid.InputBindings>
                <KeyBinding Gesture="F5"
                            Command="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ReloadCommand}"
                            CommandParameter="{Binding RelativeSource={RelativeSource TemplatedParent},Path=EnableHotkeys}" />
            </Grid.InputBindings>
            <ContentControl Grid.Row="0"
                            x:Name="WebView"
                            Content="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=WebView}" />
            <ProgressBar Grid.Row="1" IsIndeterminate="True"
                         Height="4"
                         x:Name="WebViewIsBusyAdorner"
                         Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsBusy, Converter={x:Static converters:TrueToVisibleFalseToCollapsedConverter.Instance}}" />
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="TemporaryBlazorContentControlTemplate" TargetType="{x:Type wpf:BlazorContentControl}">
        <TextBlock Text="WebView2 is not installed" />
    </ControlTemplate>

    <Style x:Key="DefaultBlazorContentControlStyle" TargetType="{x:Type wpf:BlazorContentControl}">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Background" Value="{DynamicResource MaterialDesignPaper}"></Setter>
        <Style.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Source={x:Static wpf:WebViewAccessor.Instance}, Path=IsInstalled}" Value="True"/>
                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=UnhandledException, Converter={x:Static converters:NullToFalseConverter.Instance}}" Value="False"/>
                </MultiDataTrigger.Conditions>
                <Setter Property="Template" Value="{StaticResource BlazorContentControlTemplate}" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Source={x:Static wpf:WebViewAccessor.Instance}, Path=IsInstalled}" Value="True"/>
                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=UnhandledException, Converter={x:Static converters:NullToFalseConverter.Instance}}" Value="True"/>
                </MultiDataTrigger.Conditions>
                <Setter Property="Template" Value="{StaticResource BlazorContentControlErrorTemplate}" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Source={x:Static wpf:WebViewAccessor.Instance}, Path=IsInstalled}" Value="False"/>
                </MultiDataTrigger.Conditions>
                <Setter Property="Template" Value="{StaticResource TemporaryBlazorContentControlTemplate}" />
            </MultiDataTrigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type wpf:BlazorContentControl}" BasedOn="{StaticResource DefaultBlazorContentControlStyle}" />
</scaffolding:SharedResourceDictionary>