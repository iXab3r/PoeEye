<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
                    xmlns:s="clr-namespace:PoeShared.Scaffolding.WPF">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/PoeShared;component/Themes/Converters.xaml" />
        <ResourceDictionary Source="pack://application:,,,/PoeShared;component/Themes/Colors.xaml" />
        <ResourceDictionary Source="pack://application:,,,/PoeShared;component/Themes/CommandWrapperView.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/materialdesigntheme.togglebutton.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/materialdesigntheme.button.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/materialdesigntheme.dark.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/materialdesigntheme.popupbox.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/materialdesigntheme.progressbar.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/materialdesigntheme.textbox.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/materialdesigntheme.combobox.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/materialdesigntheme.listbox.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/materialdesigntheme.menu.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/materialdesigntheme.textblock.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style TargetType="{x:Type Button}" x:Key="InvisibleButtonStyleKey">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}" />
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ToggleButton}" x:Key="ToggleCircleButton">
        <Setter Property="FontFamily" Value="{StaticResource FontAwesome}" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
    </Style>

    <Style TargetType="{x:Type Label}" x:Key="IconLabel"
           BasedOn="{StaticResource {x:Type Label}}">
        <Setter Property="FontFamily" Value="{StaticResource FontAwesome}" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="0" />
    </Style>

    <Style TargetType="{x:Type TextBlock}" x:Key="IconTextBlock">
        <Setter Property="FontFamily" Value="{StaticResource FontAwesome}" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="TextAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Height" Value="NaN" />
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="FlatButton"
           BasedOn="{StaticResource MaterialDesignFlatButton}">
        <Setter Property="FontFamily" Value="{StaticResource FontAwesome}" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="IsTabStop" Value="False" />
    </Style>

    <!-- DEFAULT STYLES -->

    <Style TargetType="{x:Type TextBlock}"
           BasedOn="{StaticResource IconTextBlock}" />

    <Style TargetType="{x:Type ToggleButton}"
           BasedOn="{StaticResource MaterialDesignSwitchAccentToggleButton}">
        <Setter Property="FontFamily" Value="{StaticResource FontAwesome}" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="Margin" Value="0,4,0,0" />
    </Style>

    <Style TargetType="{x:Type Button}"
           BasedOn="{StaticResource MaterialDesignRaisedDarkButton}">
        <Setter Property="FontFamily" Value="{StaticResource FontAwesome}" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Height" Value="24" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource PrimaryHueMidBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="MaterialCircleButton"
           BasedOn="{StaticResource MaterialDesignFloatingActionMiniDarkButton}">
        <Setter Property="FontFamily" Value="{StaticResource FontAwesome}" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource PrimaryHueMidBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="CircleButton">
        <Setter Property="FontFamily" Value="{StaticResource FontAwesome}" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
    </Style>


    <Style TargetType="{x:Type Button}" x:Key="OverlayWindowButtonStyleKey" BasedOn="{StaticResource FlatButton}" />

    <Style TargetType="{x:Type Button}" x:Key="OverlayWindowCircleButtonStyleKey" BasedOn="{StaticResource OverlayWindowButtonStyleKey}"  >
        <Setter Property="FontFamily" Value="{StaticResource FontAwesome}" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="IsTabStop" Value="False" />
    </Style>

    <Style TargetType="{x:Type TextBlock}" x:Key="OverlayWindowTextBlockStyleKey">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="FontFamily" Value="{StaticResource FontAwesome}" />
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.23" />

                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation To="0.4" Storyboard.TargetProperty="Opacity" Duration="0:0:0.3" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>

                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation To="1" Storyboard.TargetProperty="Opacity" Duration="0:0:0.3" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>