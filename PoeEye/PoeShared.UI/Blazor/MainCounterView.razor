@using PoeShared.Blazor.Wpf.Services
@inherits PoeShared.Blazor.BlazorReactiveComponent<PoeShared.UI.Blazor.MainCounterViewModel>
@inject IBlazorControlLocationTracker LocationTracker

<h1>Counter</h1>

<p>The current count is: @DataContext.Count</p>
<button @onclick="IncrementCount">Count</button>

<HeadContent>
    <meta name="description-counter" content="@DataContext.Count">
    @if (DataContext.Count > 2)
    {
        <link href="/css/test.css" rel="stylesheet"/>
    }
</HeadContent>

<ReactiveSection Trackers="@(new() { this.Listen(x => x.RefreshRequestCount), DataContext.Listen(x => x.Count) })">
    <div>Reactive @DataContext.Count</div>
</ReactiveSection>

<ReactiveSection Trackers="@(new() { LocationTracker.Listen(x => x.BoundsOnScreen) })">
    <div>@LocationTracker.BoundsOnScreen</div>
</ReactiveSection>

@code {

    void IncrementCount()
    {
        DataContext.Count++;
    }

    protected override void OnInitialized()
    {
        base.OnInitialized();

        Observable.Timer(DateTimeOffset.Now, TimeSpan.FromSeconds(10))
            .Where(x => DataContext != null)
            .Subscribe(x => IncrementCount())
            .AddTo(Anchors);
    }
}