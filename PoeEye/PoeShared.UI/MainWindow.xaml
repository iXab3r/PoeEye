<mah:MetroWindow x:Class="PoeShared.UI.MainWindow"
                 xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                 xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                 xmlns:local="clr-namespace:PoeShared.UI"
                 xmlns:st="http://schemas.spicytaco.io/"
                 xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
                 xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
                 mc:Ignorable="d"
                 xmlns:eye="http://coderush.net/poeeye/"
                 xmlns:system="clr-namespace:System;assembly=System.Runtime"
                 WindowStartupLocation="CenterScreen"
                 Title="PoeShared Demo" Height="750" Width="800" d:DataContext="{d:DesignInstance local:MainWindowViewModel}">
    <Grid>
        <TabControl>
            <TabItem Header="Misc">
                <st:AutoGrid Columns="150,Auto" Rows="*" ChildMargin="5" VerticalAlignment="Top">
                    <TextBlock Text="Random period selector" />
                    <st:StackPanel MarginBetweenChildren="5" Orientation="Horizontal">
                        <eye:CachedContentControl Content="{Binding RandomPeriodSelector}" />
                        <eye:ButtonEx Content="Next" Command="{Binding NextRandomPeriodCommand}" />
                        <TextBlock Text="{Binding RandomPeriod}" />
                    </st:StackPanel>

                    <TextBlock Text="Box with hint" />
                    <TextBox materialDesign:HintAssist.Hint="With hint" />
                    <TextBlock Text="Box without hint" />
                    <TextBox />
                    
                    <TextBlock Text="Audio notification selector" />
                    <st:StackPanel Orientation="Horizontal" MarginBetweenChildren="5">
                        <eye:CachedContentControl Content="{Binding AudioNotificationSelector}" ContentTemplate="{StaticResource AudioNotificationSelectorButtonTemplate}"/>
                        <eye:CachedContentControl Content="{Binding AudioNotificationSelector}"/>
                    </st:StackPanel>
                    
                    <TextBlock Text="Cached content control" />
                    <st:StackPanel Orientation="Horizontal" MarginBetweenChildren="5">
                        <TextBlock Text="LOADED" Visibility="{Binding FakeDelay, Converter={StaticResource NullToCollapsedConverter}}"/>
                        <TextBlock Text="NOT LOADED" Visibility="{Binding FakeDelay, Converter={StaticResource NotNullToCollapsedConverter}}"/>
                        <eye:CachedContentControl Content="{Binding FakeDelay}"/>
                        <eye:ButtonEx Content="NULL" Command="{Binding SetCachedControlContentCommand}" CommandParameter="{x:Null}"/>
                        <eye:ButtonEx Content="Alpha" Command="{Binding SetCachedControlContentCommand}" CommandParameter="Alpha"/>
                        <eye:ButtonEx Content="Beta" Command="{Binding SetCachedControlContentCommand}" CommandParameter="Beta"/>
                        <eye:ButtonEx Content="#1" Command="{Binding SetCachedControlContentCommand}">
                            <eye:ButtonEx.CommandParameter>
                                <system:Int32>
                                    1
                                </system:Int32>
                            </eye:ButtonEx.CommandParameter>
                        </eye:ButtonEx>
                        <eye:ButtonEx Content="#2" Command="{Binding SetCachedControlContentCommand}">
                            <eye:ButtonEx.CommandParameter>
                                <system:Int32>
                                    2
                                </system:Int32>
                            </eye:ButtonEx.CommandParameter>
                        </eye:ButtonEx>
                    </st:StackPanel>
                    
                    <TextBlock Text="Combobox" />
                    <ComboBox>
                        <ComboBoxItem>Item 1</ComboBoxItem>
                        <ComboBoxItem>Item 2</ComboBoxItem>
                        <ComboBoxItem>Item 3</ComboBoxItem>
                        <ComboBoxItem>Item 4</ComboBoxItem>
                        <ComboBoxItem>Item 5</ComboBoxItem>
                        <ComboBoxItem>Item 6</ComboBoxItem>
                        <ComboBoxItem>Item 7</ComboBoxItem>
                        <ComboBoxItem>Item 8</ComboBoxItem>
                        <ComboBoxItem>Item 9</ComboBoxItem>
                        <ComboBoxItem>Item 10</ComboBoxItem>
                        <ComboBoxItem>Item 11</ComboBoxItem>
                        <ComboBoxItem>Item 12</ComboBoxItem>
                        <ComboBoxItem>Item 13</ComboBoxItem>
                        <ComboBoxItem>Item 14</ComboBoxItem>
                        <ComboBoxItem>Item 15</ComboBoxItem>
                        <ComboBoxItem>Item 16</ComboBoxItem>
                        <ComboBoxItem>Item 17</ComboBoxItem>
                        <ComboBoxItem>Item 18</ComboBoxItem>
                    </ComboBox>
                </st:AutoGrid>
            </TabItem>
            <TabItem Header="SelectionAdorner">
                <st:StackPanel MarginBetweenChildren="5" Orientation="Vertical" Fill="Fill">
                    <st:StackPanel Orientation="Horizontal" MarginBetweenChildren="5">
                        <eye:ButtonEx Command="{Binding StartSelectionCommand}">Start selection</eye:ButtonEx>
                        <CheckBox IsChecked="{Binding SelectionAdorner.ShowCrosshair}">Show crosshair</CheckBox>
                        <CheckBox IsChecked="{Binding SelectionAdorner.ShowBackground}">Show background</CheckBox>
                        <TextBlock Text="Rect"></TextBlock>
                        <TextBlock Text="{Binding SelectionRect}"></TextBlock>
                        <TextBlock Text="Rectangle"></TextBlock>
                        <TextBlock Text="{Binding SelectionRectangle}"></TextBlock>
                    </st:StackPanel>
                    <eye:AdornedControl 
                        IsAdornerVisible="True" >
                        <eye:AdornedControl.AdornerContent>
                            <Grid>
                                <eye:CachedContentControl Content="{Binding SelectionAdorner}" />
                            </Grid>
                        </eye:AdornedControl.AdornerContent>
                        <Grid>
                            <Rectangle Fill="Gray" Stroke="Red" MinHeight="600" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
                        </Grid>
                    </eye:AdornedControl>
                </st:StackPanel>
            </TabItem>
            <TabItem Header="Colors">
                <st:StackPanel MarginBetweenChildren="5" Orientation="Vertical">
                    <Label Background="{DynamicResource MaterialDesignBody}" Content="Body"></Label>
                    <Label Background="{DynamicResource MaterialDesignDivider}" Content="Divider"></Label>
                    <Label Background="{DynamicResource PrimaryHueDarkForegroundBrush}" Content="PrimaryHueDarkForegroundBrush"></Label>
                    <Label Background="{DynamicResource SecondaryAccentForegroundBrush}" Content="SecondaryAccentForegroundBrush"></Label>
                    <Label Background="{DynamicResource PrimaryHueLightForegroundBrush}" Content="PrimaryHueLightForegroundBrush"></Label>
                    <Label Background="{DynamicResource PrimaryHueMidForegroundBrush}" Content="PrimaryHueMidForegroundBrush"></Label>
                    <Label Background="{DynamicResource PrimaryHueDarkForegroundBrush}" Content="PrimaryHueDarkForegroundBrush"></Label>
                    <Label Background="{DynamicResource PrimaryHueLightBrush}" Content="PrimaryHueLightBrush"></Label>
                    <Label Background="{DynamicResource PrimaryHueMidBrush}" Content="PrimaryHueMidBrush"></Label>
                    <Label Background="{DynamicResource PrimaryHueDarkBrush}" Content="PrimaryHueDarkBrush"></Label>
                    <Label Background="{DynamicResource MaterialDesignPaper}" Content="MaterialDesignPaper"></Label>
                    <Label Background="{DynamicResource MaterialDesignTextBoxBorder}" Content="MaterialDesignTextBoxBorder"></Label>
                    <Label Background="{DynamicResource MaterialDesignSelection}" Content="MaterialDesignSelection"></Label>
                    <Label Background="{DynamicResource MaterialDesignCheckBoxOff}" Content="MaterialDesignCheckBoxOff"></Label>
                    <Label Background="{DynamicResource MaterialDesignFlatButtonClick}" Content="MaterialDesignFlatButtonClick"></Label>
                    <Label Background="{DynamicResource MaterialDesignValidationErrorBrush}" Content="MaterialDesignValidationErrorBrush"></Label>
                    <Label Background="{DynamicResource MahApps.Brushes.Accent}" Content="MahApps.Brushes.Accent"></Label>
                    <Label Background="{DynamicResource MahApps.Brushes.ThemeForeground}" Content="MahApps.Brushes.ThemeForeground"></Label>
                    <Label Background="{DynamicResource MahApps.Brushes.ThemeBackground}" Content="MahApps.Brushes.ThemeBackground"></Label>
                    <Label Background="{DynamicResource MahApps.Brushes.Gray8}" Content="MahApps.Brushes.Gray8"></Label>
                    <Label Background="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}" Content="InactiveSelectionHighlightBrushKey"></Label>
                </st:StackPanel>
            </TabItem>
            <TabItem Header="BusyIndicator">
                <local:AdornerTest/>
            </TabItem>
            <TabItem Header="Notifications">
                <eye:CachedContentControl Content="{Binding NotificationSandbox}"/>
            </TabItem>
            <TabItem Header="HotkeySequence">
                <st:StackPanel Fill="Fill" Orientation="Vertical" MarginBetweenChildren="5" VerticalAlignment="Stretch">

                    <st:AutoGrid Columns="150,Auto" Rows="*" ChildMargin="5">

                        <TextBlock Text="Hide keypress delays" />
                        <CheckBox IsChecked="{Binding HotkeySequenceEditor.HideKeypressDelays}" />
                        <TextBlock Text="Mouse position recording" />
                        <CheckBox IsChecked="{Binding HotkeySequenceEditor.EnableMousePositionRecording}" />
                        <TextBlock Text="Mouse clicks recording" />
                        <CheckBox IsChecked="{Binding HotkeySequenceEditor.EnableMouseClicksRecording}" />
                        <TextBlock Text="Key clicks recording" />
                        <CheckBox IsChecked="{Binding HotkeySequenceEditor.EnableKeyboardRecording}" />

                        <TextBlock Text="Total duration" />
                        <TextBlock Text="" />

                        <TextBlock Text="Item count" />
                        <TextBlock Text="{Binding HotkeySequenceEditor.Items.Count}" />

                        <TextBlock Text="Stop recording hotkey" />
                        <eye:HotKeyBox 
                            AcceptsModifiers="False"
                            AcceptsTab="False"
                            AcceptsMouseKeys="False"
                            AcceptsMouseWheel="False"
                            HotKey="{Binding HotkeySequenceEditor.ToggleRecordingHotkey}" />

                        <TextBlock Text="MaxDuration" />
                        <mah:NumericUpDown
                            Interval="1000"
                            Value="{Binding HotkeySequenceEditor.MaxDuration, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource TimeSpanToMillisecondsConverter}}" />
                        
                        <TextBlock Text="Key Press Duration" />
                        <mah:NumericUpDown
                            Interval="50"
                            Value="{Binding HotkeySequenceEditor.DefaultKeyPressDuration, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource TimeSpanToMillisecondsConverter}}" />

                        <TextBlock Text="MousePositionRecordingResolution" />
                        <mah:NumericUpDown
                            Interval="100"
                            Value="{Binding HotkeySequenceEditor.MousePositionRecordingResolution, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource TimeSpanToMillisecondsConverter}}" />
                    </st:AutoGrid>

                    <eye:CachedContentControl Content="{Binding HotkeySequenceEditor}" Margin="10" />
                </st:StackPanel>
            </TabItem>
            <TabItem Header="ButtonEx">
                <StackPanel>
                    <eye:ButtonEx Content="OK"
                                  Icon="&#xf1fb;"
                                  Command="{Binding LongCommand}" />

                    <eye:ButtonEx Icon="&#xf00d;" Content="With Icon" Command="{Binding LongCommand}" />
                    <eye:ButtonEx Icon="&#xf00d;" Command="{Binding LongCommand}" />

                    <eye:ButtonEx Content="Error" Command="{Binding ErrorCommand}" />
                    <eye:ButtonEx Icon="&#xf00d;" Command="{Binding ErrorCommand}" />
                </StackPanel>
            </TabItem>
        </TabControl>
    </Grid>
</mah:MetroWindow>