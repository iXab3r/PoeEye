<ui:SharedResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                             xmlns:ui="clr-namespace:PoeShared.UI"
                             xmlns:native="clr-namespace:PoeShared.Native"
                             xmlns:wpf="clr-namespace:PoeShared.Scaffolding.WPF"
                             xmlns:converters="http://schemas.kent.boogaart.com/converters"
                             xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
                             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
                             mc:Ignorable="d">

    <ui:SharedResourceDictionary.MergedDictionaries>
        <ui:SharedResourceDictionary Source="pack://application:,,,/PoeShared.Wpf;component/Themes/Styles.xaml" />
        <ui:SharedResourceDictionary Source="pack://application:,,,/PoeShared.Wpf;component/Themes/Thumb.xaml" />
        <ui:SharedResourceDictionary Source="pack://application:,,,/PoeShared.Wpf;component/Themes/Converters.xaml" />
        <ui:SharedResourceDictionary Source="pack://application:,,,/PoeShared.Wpf;component/Themes/Colors.xaml" />
        <ui:SharedResourceDictionary Source="pack://application:,,,/PoeShared.Wpf;component/Themes/CommandWrapperView.xaml" />
        <ui:SharedResourceDictionary Source="pack://application:,,,/PoeShared.Wpf;component/UI/ButtonEx.xaml" />
        <ui:SharedResourceDictionary Source="pack://application:,,,/PoeShared.Wpf;component/UI/ColorPicker/ColorPickerEx.xaml" />
        <ui:SharedResourceDictionary Source="pack://application:,,,/PoeShared.Wpf;component/UI/Hotkeys/HotKeyBox.xaml" />
        <ui:SharedResourceDictionary Source="pack://application:,,,/PoeShared.Wpf;component/UI/RandomPeriodSelector.xaml" />
        <ui:SharedResourceDictionary Source="pack://application:,,,/PoeShared.Wpf;component/UI/CachedContentControl.xaml" />
    </ui:SharedResourceDictionary.MergedDictionaries>

    <Style x:Key="OverlayCloseButtonStyle" TargetType="{x:Type Button}"
           BasedOn="{StaticResource OverlayWindowCircleButtonStyleKey}"
           d:DataContext="{d:DesignInstance native:OverlayWindowContainer}">
        <Setter Property="Content" Value="&#xf09c;" />
        <Setter Property="Foreground" Value="Red" />
        <Setter Property="Padding" Value="0,2,0,0" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding Content.IsLocked}" Value="True" />

            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Content" Value="&#xf023;" />
                <Setter Property="Foreground" Value="GreenYellow" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="OverlayWindowViewStyleKey" TargetType="{x:Type native:OverlayWindowView}"
           d:DataContext="{d:DesignInstance native:OverlayWindowContainer}">
        <Setter Property="Background" Value="{x:Null}" />
        <Setter Property="BorderBrush" Value="{x:Null}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="DataContext" Value="{Binding}" />
        <Setter Property="SizeToContent" Value="{Binding Content.SizeToContent, Mode=OneWay}" />
        <Setter Property="AllowsTransparency" Value="True" />
        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter Property="Focusable" Value="{Binding IsFocusable}" />
        <Setter Property="ShowInTaskbar" Value="{Binding Content.ShowInTaskbar, Mode=TwoWay}" />
        <Setter Property="ShowActivated" Value="False" />
        <Setter Property="ShowSystemMenu" Value="False" />
        <Setter Property="ShowTitleBar" Value="False" />
        <Setter Property="ShowCloseButton" Value="False" />
        <Setter Property="ShowMaxRestoreButton" Value="False" />
        <Setter Property="ShowMinButton" Value="False" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="NonActiveBorderBrush" Value="{x:Null}" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type native:OverlayWindowView}">
                    <AdornerDecorator>
                        <Grid>
                            <Border>
                                <Grid TextBlock.Foreground="{StaticResource PoeFontBrush}">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="*" />
                                    </Grid.RowDefinitions>

                                    <!-- Header -->
                                    <Grid Grid.Row="0" Height="36" Visibility="{Binding Content.EnableHeader, Converter={StaticResource TrueToVisibleFalseToCollapsedConverter}}">
                                        <Border
                                            wpf:EnableDragHelper.EnableDrag="True"
                                            Background="{StaticResource OverlayWindowTitleBackgroundBrushKey}"
                                            BorderBrush="{StaticResource OverlayWindowBorderBrushKey}"
                                            BorderThickness="1"
                                            Visibility="{Binding Content.IsLocked, Converter={StaticResource TrueToHiddenFalseToVisibleConverter}}"
                                            Margin="3,3,3,8">
                                            <StackPanel Orientation="Horizontal">
                                                <Button Command="{Binding Content.LockWindowCommand}" Width="30" Height="30" FontFamily="{StaticResource FontAwesome}"
                                                        Style="{StaticResource OverlayCloseButtonStyle}">
                                                    <Button.Triggers>
                                                        <EventTrigger RoutedEvent="Mouse.MouseEnter">
                                                            <EventTrigger.EnterActions>
                                                                <BeginStoryboard>
                                                                    <Storyboard>
                                                                        <DoubleAnimation
                                                                            Storyboard.TargetName="TradeMonitorBackground"
                                                                            Storyboard.TargetProperty="Opacity"
                                                                            From="1"
                                                                            To="0.1"
                                                                            Duration="0:0:1" />
                                                                    </Storyboard>
                                                                </BeginStoryboard>
                                                            </EventTrigger.EnterActions>
                                                        </EventTrigger>
                                                        <EventTrigger RoutedEvent="Mouse.MouseLeave">
                                                            <EventTrigger.EnterActions>
                                                                <BeginStoryboard>
                                                                    <Storyboard>
                                                                        <DoubleAnimation
                                                                            Storyboard.TargetName="TradeMonitorBackground"
                                                                            Storyboard.TargetProperty="Opacity"
                                                                            To="1"
                                                                            Duration="0:0:1" />
                                                                    </Storyboard>
                                                                </BeginStoryboard>
                                                            </EventTrigger.EnterActions>
                                                        </EventTrigger>
                                                    </Button.Triggers>
                                                </Button>
                                                <TextBlock Style="{StaticResource OverlayWindowTextBlockStyleKey}"
                                                           Text="{Binding Content.Title}"
                                                           Foreground="{StaticResource OverlayTitleBrushKey}"
                                                           HorizontalAlignment="Center"
                                                           FontWeight="Bold" />
                                            </StackPanel>
                                        </Border>
                                    </Grid>

                                    <Border Grid.Row="1"
                                            x:Name="WindowBorder"
                                            BorderBrush="{StaticResource OverlayWindowBorderBrushKey}"
                                            BorderThickness="1">
                                        <Border.Visibility>
                                            <MultiBinding Converter="{StaticResource MultiBooleanAllTrueToVisibleFalseToHiddenConverter}">
                                                <Binding Path="Content.IsLocked" Converter="{StaticResource NotConverter}" />
                                                <Binding Path="Content.ShowResizeThumbs" />
                                            </MultiBinding>
                                        </Border.Visibility>
                                    </Border>

                                    <!-- Body -->
                                    <native:ContentControlEx Grid.Row="1"
                                                             Focusable="{Binding IsFocusable}" IsTabStop="False"
                                                             Location="{Binding Content.ViewModelLocation, Mode=OneWayToSource}"
                                                             Content="{Binding Content}"
                                                             ContentTemplate="{Binding ContentTemplate}" />
                                </Grid>
                            </Border>

                            <Border
                                Visibility="{Binding ShowWireframes, Converter={StaticResource TrueToVisibleFalseToCollapsedConverter}}"
                                BorderThickness="3"
                                IsHitTestVisible="False"
                                BorderBrush="GreenYellow"
                                Background="#aa000000">
                                <StackPanel Orientation="Vertical">
                                    <StackPanel.Resources>
                                        <Style TargetType="{x:Type TextBlock}"
                                               BasedOn="{StaticResource {x:Type TextBlock}}">
                                            <Setter Property="Foreground" Value="Red" />
                                            <Setter Property="FontWeight" Value="Bold" />
                                        </Style>
                                    </StackPanel.Resources>
                                    <TextBlock Foreground="Yellow"
                                               Text="{Binding Content.Title, TargetNullValue='Title is not set'}"
                                               FontSize="14" />
                                    <TextBlock Foreground="Yellow"
                                               Text="{Binding Content, Converter={StaticResource ObjectToTypeConverter}}"
                                               FontSize="14" />
                                    <TextBlock
                                        Margin="5,0"
                                        Text="{Binding Content.IsLocked, StringFormat='IsLocked: {0}'}" />

                                    <StackPanel Orientation="Horizontal">
                                        <TextBlock
                                            Margin="5,0"
                                            Text="{Binding Content.NativeBounds.X, StringFormat='X: {0:F0}'}" />

                                        <TextBlock
                                            Margin="5,0"
                                            Text="{Binding Content.NativeBounds.Y, StringFormat='Y: {0:F0}'}" />
                                    </StackPanel>

                                    <StackPanel Orientation="Horizontal">
                                        <TextBlock
                                            Margin="5,0"
                                            Text="{Binding Content.NativeBounds.Width, StringFormat='Width: {0:F0}'}" />

                                        <TextBlock
                                            Margin="5,0"
                                            Text="{Binding Content.NativeBounds.Height, StringFormat='Height: {0:F0}'}" />
                                    </StackPanel>

                                    <StackPanel Orientation="Horizontal">
                                        <TextBlock
                                            Margin="5,0"
                                            Text="{Binding Content.MinSize.Width, StringFormat='MinWidth: {0:F0}'}" />

                                        <TextBlock
                                            Margin="5,0"
                                            Text="{Binding Content.MinSize.Height, StringFormat='MinHeight: {0:F0}'}" />
                                    </StackPanel>

                                    <StackPanel Orientation="Horizontal">
                                        <TextBlock
                                            Margin="5,0"
                                            Text="{Binding Content.MaxSize.Width, StringFormat='MaxWidth: {0:F0}'}" />

                                        <TextBlock
                                            Margin="5,0"
                                            Text="{Binding Content.MaxSize.Height, StringFormat='MaxHeight: {0:F0}'}" />
                                    </StackPanel>

                                    <StackPanel Orientation="Horizontal">
                                        <TextBlock
                                            Margin="5,0"
                                            Text="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Path=SizeToContent, StringFormat='SizeToContent: {0}'}" />
                                    </StackPanel>

                                </StackPanel>
                            </Border>

                            <Grid Visibility="{Binding ElementName=WindowBorder, Path=Visibility}">
                                <Thumb Style="{StaticResource OverlayThumbBottomLeftStyle}"
                                       IsHitTestVisible="False"
                                       Width="{Binding ResizeThumbSize}"
                                       Height="{Binding ResizeThumbSize}" />
                                <Thumb Style="{StaticResource OverlayThumbBottomRightStyle}" IsHitTestVisible="False"
                                       Width="{Binding ResizeThumbSize}"
                                       Height="{Binding ResizeThumbSize}" />
                                <Thumb Style="{StaticResource OverlayThumbTopLeftStyle}" IsHitTestVisible="False"
                                       Width="{Binding ResizeThumbSize}"
                                       Height="{Binding ResizeThumbSize}" />
                                <Thumb Style="{StaticResource OverlayThumbTopRightStyle}" IsHitTestVisible="False"
                                       Width="{Binding ResizeThumbSize}"
                                       Height="{Binding ResizeThumbSize}" />
                            </Grid>
                        </Grid>
                    </AdornerDecorator>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <DataTrigger Binding="{Binding Content.IsLocked}" Value="True">
                <Setter Property="ResizeMode" Value="NoResize" />
                <Setter Property="WindowStyle" Value="None" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type native:OverlayWindowView}" BasedOn="{StaticResource OverlayWindowViewStyleKey}" />
</ui:SharedResourceDictionary>