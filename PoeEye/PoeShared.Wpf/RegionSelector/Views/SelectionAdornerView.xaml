<eye:SharedResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:eye="clr-namespace:PoeShared.UI"
                    xmlns:viewModels1="clr-namespace:EyeAuras.UI.RegionSelector.ViewModels"
                    xmlns:viewModels="clr-namespace:PoeShared.RegionSelector.ViewModels"
                    xmlns:scaffolding="clr-namespace:PoeShared.Scaffolding">
    <eye:SharedResourceDictionary.MergedDictionaries>
        <eye:SharedResourceDictionary Source="pack://application:,,,/PoeShared.Wpf;component/Themes/Converters.xaml" />
        <eye:SharedResourceDictionary Source="pack://application:,,,/PoeShared.Wpf;component/Themes/Colors.xaml" />
    </eye:SharedResourceDictionary.MergedDictionaries>

    <DataTemplate DataType="{x:Type viewModels:SelectionAdornerViewModel}">
        <Grid>
            <Grid x:Name="SelectionAdorner" Cursor="{x:Static Cursors.Cross}"
                  IsHitTestVisible="{Binding IsVisible}"
                  Visibility="{Binding IsVisible, Converter={StaticResource TrueToVisibleFalseToCollapsedConverter}}"
                  Background="Transparent">
                
                <Grid IsHitTestVisible="False" >
                    <Border 
                        BorderBrush="{StaticResource OverlayWindowBorderBrushKey}"
                        BorderThickness="1" />

                    <Canvas>
                        <Path Fill="Black" Opacity="{Binding BackgroundOpacity}"
                              Visibility="{Binding ShowBackground, Converter={StaticResource TrueToVisibleFalseToCollapsedConverter}}"> 
                            <Path.Data>
                                <CombinedGeometry GeometryCombineMode="Exclude">
                                    <CombinedGeometry.Geometry1>
                                        <RectangleGeometry>
                                            <RectangleGeometry.Rect>
                                                <MultiBinding Converter="{StaticResource RectangleConverter}">
                                                    <Binding Path="ActualWidth" ElementName="SelectionAdorner" />
                                                    <Binding Path="ActualHeight" ElementName="SelectionAdorner" />
                                                </MultiBinding>
                                            </RectangleGeometry.Rect>
                                        </RectangleGeometry>
                                    </CombinedGeometry.Geometry1>
                                    <CombinedGeometry.Geometry2>
                                        <RectangleGeometry>
                                            <RectangleGeometry.Rect>
                                                <MultiBinding Converter="{StaticResource RectangleConverter}">
                                                    <Binding Path="Selection.X" />
                                                    <Binding Path="Selection.Y"  />
                                                    <Binding Path="Selection.Width"  />
                                                    <Binding Path="Selection.Height"  />
                                                </MultiBinding>
                                            </RectangleGeometry.Rect>
                                        </RectangleGeometry>
                                    </CombinedGeometry.Geometry2>
                                </CombinedGeometry>
                            </Path.Data>
                        </Path>
                        
                        <Grid Canvas.Left="{Binding MousePosition.X}" Canvas.Top="{Binding MousePosition.Y}">
                            <Border Margin="10,10,0,0" >
                                <TextBlock FontSize="16" Margin="2.5"
                                           Foreground="{Binding Stroke}"
                                           FontWeight="Bold"
                                           TextTrimming="CharacterEllipsis">
                                    <TextBlock.Inlines>
                                        <Run Text="{Binding ScreenMousePosition.X, StringFormat='X:{0:F0}', Mode=OneWay}"/>
                                        <Run Text="{Binding ScreenMousePosition.Y, StringFormat='Y:{0:F0}', Mode=OneWay}"/>
                                    </TextBlock.Inlines>
                                </TextBlock>
                            </Border>
                        </Grid>
                        
                        <Grid Canvas.Left="{Binding Selection.X}" Canvas.Top="{Binding Selection.Y}"
                              Visibility="{Binding ScreenSelection.IsEmpty, Converter={StaticResource TrueToCollapsedFalseToVisibleConverter}}" >
                            <Border Margin="10,-50,0,0" >
                                <TextBlock FontSize="16" Margin="2.5"
                                           Foreground="{Binding Stroke}"
                                           FontWeight="Bold"
                                           TextTrimming="CharacterEllipsis">
                                    <TextBlock.Inlines>
                                        <Run Text="{Binding ScreenSelection.X, StringFormat='X:{0:F0}', Mode=OneWay}"/>
                                        <Run Text="{Binding ScreenSelection.Y, StringFormat='Y:{0:F0}', Mode=OneWay}"/>
                                        <Run Text="{Binding ScreenSelection.Width, StringFormat='W:{0:F0}', Mode=OneWay}"/>
                                        <Run Text="{Binding ScreenSelection.Height, StringFormat='H:{0:F0}', Mode=OneWay}"/>
                                    </TextBlock.Inlines>
                                </TextBlock>
                            </Border>
                        </Grid>
                        
                        <Grid 
                            x:Name="SelectionCrosshair"
                            Visibility="{Binding ShowCrosshair, Converter={StaticResource TrueToVisibleFalseToCollapsedConverter}}">
                            <Line 
                                x:Name="CrosshairHorizontalLine"
                                Stroke="{Binding Stroke}"
                                StrokeThickness="{Binding StrokeThickness}"
                                X1="0"
                                X2="{Binding ElementName=SelectionAdorner, Path=ActualWidth}"
                                Y1="{Binding MousePosition.Y}"
                                Y2="{Binding MousePosition.Y}"
                                Visibility="{Binding SelectionIsNotEmpty, Converter={StaticResource TrueToCollapsedFalseToVisibleConverter}}" />

                            <Line 
                                x:Name="CrosshairVerticalLine"
                                Stroke="{Binding Stroke}"
                                StrokeThickness="{Binding StrokeThickness}"
                                X1="{Binding MousePosition.X}"
                                X2="{Binding MousePosition.X}"
                                Y1="0"
                                Y2="{Binding ElementName=SelectionAdorner, Path=ActualHeight}"
                                Visibility="{Binding SelectionIsNotEmpty, Converter={StaticResource TrueToCollapsedFalseToVisibleConverter}}" />
                        </Grid>
                        
                        <Rectangle x:Name="SelectionBox"
                                   Visibility="{Binding SelectionIsNotEmpty, Converter={StaticResource TrueToVisibleFalseToCollapsedConverter}}"
                                   Canvas.Left="{Binding Selection.X}" 
                                   Canvas.Top="{Binding Selection.Y}"
                                   Width="{Binding Selection.Width}"
                                   Height="{Binding Selection.Height}"
                                   Stroke="{Binding Stroke}" 
                                   StrokeThickness="{Binding StrokeThickness}"
                                   StrokeDashOffset="2" StrokeDashArray="2">
                            <Rectangle.Style>
                                <Style TargetType="{x:Type Rectangle}">
                                    <Style.Triggers>
                                        <Trigger Property="IsVisible" Value="True">
                                            <Trigger.EnterActions>
                                                <BeginStoryboard>
                                                   <Storyboard>
                                                       <DoubleAnimation BeginTime="00:00:00" RepeatBehavior="Forever"
                                                                        Storyboard.TargetProperty="StrokeDashOffset" 
                                                                        Duration="0:3:0" From="1000" To="0"/>
                                                   </Storyboard>
                                                </BeginStoryboard>
                                            </Trigger.EnterActions>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Rectangle.Style>
                        </Rectangle>
                    </Canvas>
                </Grid>
            </Grid>
            <scaffolding:DataPiping.DataPipes>
                <scaffolding:DataPipeCollection>
                    <scaffolding:DataPipe 
                        Source="{Binding ElementName=SelectionAdorner}" 
                        Target="{Binding Owner, Mode=OneWayToSource}"/>
                </scaffolding:DataPipeCollection>
            </scaffolding:DataPiping.DataPipes>
        </Grid>
    </DataTemplate>
</eye:SharedResourceDictionary>