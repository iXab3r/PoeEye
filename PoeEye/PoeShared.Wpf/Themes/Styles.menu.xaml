<eye:SharedResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                              xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                              xmlns:wpf="http://materialdesigninxaml.net/winfx/xaml/themes"
                              xmlns:eye="clr-namespace:PoeShared.UI"
                              xmlns:ui1="clr-namespace:PoeShared.Scaffolding.WPF">

    <eye:SharedResourceDictionary.MergedDictionaries>
        <eye:SharedResourceDictionary Source="pack://application:,,,/PoeShared.Wpf;component/Themes/Converters.xaml" />
        <eye:SharedResourceDictionary Source="pack://application:,,,/PoeShared.Wpf;component/Themes/Colors.xaml" />
        <eye:SharedResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/materialdesigntheme.menu.xaml" />
    </eye:SharedResourceDictionary.MergedDictionaries>
    
    <Style TargetType="{x:Type MenuItem}" x:Key="SlowHierarchicalMenuItem" BasedOn="{x:Null}">
        <Setter Property="Padding" Value="8,3" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="MinHeight" Value="27" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Command">
            <Setter.Value>
                <Binding RelativeSource="{RelativeSource Self}" Path="(ui1:CommandWrapperHelper.Command)" />
            </Setter.Value>
        </Setter>
        <Setter Property="CommandParameter" Value="{Binding RelativeSource={RelativeSource Self}, Path=(ui1:CommandWrapperHelper.CommandParameter)}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type MenuItem}">
                    <Border x:Name="Container"
                            Background="{TemplateBinding Background}"
                            Height="{TemplateBinding Height}">
                        <Grid
                            Margin="{TemplateBinding Padding}"
                            VerticalAlignment="Center">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" SharedSizeGroup="IconGroup" />
                                <ColumnDefinition Width="*" SharedSizeGroup="TextGroup" />
                                <ColumnDefinition Width="Auto" SharedSizeGroup="GestureGroup" />
                            </Grid.ColumnDefinitions>

                            <ContentPresenter Grid.Column="0" x:Name="IconPresenter"
                                              VerticalAlignment="Center"
                                              Visibility="{TemplateBinding Icon, Converter={StaticResource NullToCollapsedConverter}}"
                                              Content="{TemplateBinding Icon}" />

                            <ContentPresenter Grid.Column="1" x:Name="HeaderPresenter"
                                              Margin="{TemplateBinding Padding}"
                                              ContentTemplate="{TemplateBinding HeaderTemplate}"
                                              Content="{TemplateBinding Header}"
                                              ContentStringFormat="{TemplateBinding HeaderStringFormat}"
                                              ContentSource="Header"
                                              RecognizesAccessKey="True"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />

                            <ContentPresenter Grid.Column="2" x:Name="InputGesturePresenter"
                                              VerticalAlignment="Center"
                                              Visibility="{TemplateBinding InputGestureText, Converter={StaticResource NullToCollapsedConverter}}"
                                              Content="{TemplateBinding InputGestureText}" />
                            <Popup
                                Grid.Column="0" 
                                x:Name="PART_Popup"
                                AllowsTransparency="True"
                                Margin="16 0 0 0"
                                Focusable="False"
                                IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}"
                                PopupAnimation="Fade"
                                Placement="Bottom"
                                CacheMode="{Binding RelativeSource={RelativeSource Self}, Path=(wpf:ShadowAssist.CacheMode)}">
                                <Border
                                    x:Name="SubMenuBorder"
                                    Background="{Binding Path=Background, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=MenuBase}}"
                                    Effect="{DynamicResource MaterialDesignShadowDepth1}"
                                    CornerRadius="2">

                                    <Border
                                        Background="Transparent">
                                        <ScrollViewer
                                            x:Name="SubMenuScrollViewer"
                                            Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">
                                            <Grid
                                                RenderOptions.ClearTypeHint="Enabled"
                                                Margin="0 16">
                                                <Canvas
                                                    HorizontalAlignment="Left"
                                                    Height="0"
                                                    VerticalAlignment="Top"
                                                    Width="0">
                                                    <Rectangle
                                                        x:Name="OpaqueRect"
                                                        Fill="{Binding Background, ElementName=SubMenuBorder}"
                                                        Height="{Binding ActualHeight, ElementName=SubMenuBorder}"
                                                        Width="{Binding ActualWidth, ElementName=SubMenuBorder}" />
                                                </Canvas>
                                                <ItemsPresenter
                                                    x:Name="ItemsPresenter"
                                                    KeyboardNavigation.DirectionalNavigation="Cycle"
                                                    Grid.IsSharedSizeScope="True"
                                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                    KeyboardNavigation.TabNavigation="Cycle" />
                                            </Grid>
                                        </ScrollViewer>
                                    </Border>
                                </Border>
                            </Popup>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger
                            Property="Role"
                            Value="SubmenuHeader">
                            <Setter
                                TargetName="PART_Popup"
                                Property="Placement"
                                Value="Right" />
                        </Trigger>
                        <Trigger Property="ui1:ContextMenuServiceExtensions.BindDataContextToMenuItemCommandParameter" Value="True">
                            <Setter Property="ui1:CommandWrapperHelper.CommandParameter" Value="{Binding DataContext, RelativeSource={RelativeSource Self}}" />
                        </Trigger>
                        <Trigger Property="IsHighlighted" Value="True">
                            <Setter Property="Background" Value="{DynamicResource PrimaryHueDarkBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value=".56" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type MenuItem}" x:Key="FastMenuItem" BasedOn="{x:Null}">
        <Setter Property="Padding" Value="8,3" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="MinHeight" Value="27" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Command">
            <Setter.Value>
                <Binding RelativeSource="{RelativeSource Self}" Path="(ui1:CommandWrapperHelper.Command)" />
            </Setter.Value>
        </Setter>
        <Setter Property="CommandParameter" Value="{Binding RelativeSource={RelativeSource Self}, Path=(ui1:CommandWrapperHelper.CommandParameter)}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type MenuItem}">
                    <Border x:Name="Container"
                            Background="{TemplateBinding Background}"
                            Height="{TemplateBinding Height}">
                        <Grid
                            Margin="{TemplateBinding Padding}"
                            VerticalAlignment="Center">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" SharedSizeGroup="IconGroup" />
                                <ColumnDefinition Width="*" SharedSizeGroup="TextGroup" />
                                <ColumnDefinition Width="Auto" SharedSizeGroup="GestureGroup" />
                            </Grid.ColumnDefinitions>

                            <ContentPresenter Grid.Column="0" x:Name="IconPresenter"
                                              VerticalAlignment="Center"
                                              Visibility="{TemplateBinding Icon, Converter={StaticResource NullToCollapsedConverter}}"
                                              Content="{TemplateBinding Icon}" />

                            <ContentPresenter Grid.Column="1" x:Name="HeaderPresenter"
                                              Margin="{TemplateBinding Padding}"
                                              ContentTemplate="{TemplateBinding HeaderTemplate}"
                                              Content="{TemplateBinding Header}"
                                              ContentStringFormat="{TemplateBinding HeaderStringFormat}"
                                              ContentSource="Header"
                                              RecognizesAccessKey="True"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />

                            <ContentPresenter Grid.Column="2" x:Name="InputGesturePresenter"
                                              VerticalAlignment="Center"
                                              Visibility="{TemplateBinding InputGestureText, Converter={StaticResource NullToCollapsedConverter}}"
                                              Content="{TemplateBinding InputGestureText}" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ui1:ContextMenuServiceExtensions.BindDataContextToMenuItemCommandParameter" Value="True">
                            <Setter Property="ui1:CommandWrapperHelper.CommandParameter" Value="{Binding DataContext, RelativeSource={RelativeSource Self}}" />
                        </Trigger>
                        <Trigger Property="IsHighlighted" Value="True">
                            <Setter Property="Background" Value="{DynamicResource PrimaryHueDarkBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value=".56" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="FastContextMenuStyle" TargetType="{x:Type ContextMenu}" BasedOn="{StaticResource MaterialDesignContextMenu}">
        <Style.Resources>
            <Style TargetType="MenuItem" BasedOn="{StaticResource FastMenuItem}" />
        </Style.Resources>
        
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="FontFamily" Value="{StaticResource FontAwesome}" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="BorderBrush" Value="{DynamicResource PrimaryHueMidBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type MenuBase}">
                    <AdornerDecorator CacheMode="{Binding RelativeSource={RelativeSource Self}, Path=(wpf:ShadowAssist.CacheMode)}">
                        <Grid>
                            <Border Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="2" Effect="{DynamicResource MaterialDesignShadowDepth1}" />

                            <Border Margin="3" Background="Transparent">
                                <ScrollViewer x:Name="SubMenuScrollViewer"
                                              Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">
                                    <Grid RenderOptions.ClearTypeHint="Enabled">
                                        <ItemsPresenter x:Name="ItemsPresenter" Margin="{TemplateBinding Padding}"
                                                        KeyboardNavigation.DirectionalNavigation="Cycle"
                                                        Grid.IsSharedSizeScope="True"
                                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                        KeyboardNavigation.TabNavigation="Cycle" />
                                    </Grid>
                                </ScrollViewer>
                            </Border>
                        </Grid>
                    </AdornerDecorator>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</eye:SharedResourceDictionary>