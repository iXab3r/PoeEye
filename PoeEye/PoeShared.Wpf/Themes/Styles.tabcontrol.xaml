<eye:SharedResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                              xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                              xmlns:wpf="http://materialdesigninxaml.net/winfx/xaml/themes"
                              xmlns:eye="clr-namespace:PoeShared.UI">
    <eye:SharedResourceDictionary.MergedDictionaries>
        <eye:SharedResourceDictionary Source="pack://application:,,,/PoeShared.Wpf;component/Themes/Converters.xaml" />
        <eye:SharedResourceDictionary Source="pack://application:,,,/PoeShared.Wpf;component/Themes/Colors.xaml" />
        <eye:SharedResourceDictionary
            Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/materialdesigntheme.tabcontrol.xaml" />
    </eye:SharedResourceDictionary.MergedDictionaries>

    <Style x:Key="FastTabControlBase" TargetType="{x:Type TabControl}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground"
                Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type FrameworkElement}}, Path=(TextElement.Foreground)}" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabControl}">
                    <DockPanel KeyboardNavigation.TabNavigation="Local">
                        <wpf:ColorZone x:Name="PART_HeaderZone"
                                       VerticalAlignment="Stretch"
                                       Panel.ZIndex="1"
                                       wpf:ShadowAssist.ShadowEdges="{TemplateBinding wpf:ShadowAssist.ShadowEdges}"
                                       Background="{TemplateBinding wpf:ColorZoneAssist.Background}"
                                       DockPanel.Dock="Top"
                                       Focusable="False">
                            <ScrollViewer eye:ScrollViewerAssist.SupportHorizontalScroll="True"
                                          eye:ScrollViewerAssist.BubbleVerticalScroll="True"
                                          HorizontalScrollBarVisibility="Hidden"
                                          VerticalScrollBarVisibility="Hidden">
                                <StackPanel>
                                    <UniformGrid x:Name="CenteredHeaderPanel"
                                                 HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                 VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                 Focusable="False"
                                                 eye:TabAssist.BindableIsItemsHost="{Binding Visibility, RelativeSource={RelativeSource Self}}"
                                                 KeyboardNavigation.TabIndex="1"
                                                 Rows="1" />
                                    <VirtualizingStackPanel x:Name="HeaderPanel"
                                                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                            Focusable="False"
                                                            eye:TabAssist.BindableIsItemsHost="{Binding Visibility, RelativeSource={RelativeSource Self}}"
                                                            KeyboardNavigation.TabIndex="1"
                                                            Orientation="Horizontal" />
                                </StackPanel>
                            </ScrollViewer>
                        </wpf:ColorZone>
                        <Border x:Name="PART_BorderSelectedContent"
                                Padding="{TemplateBinding Padding}"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch"
                                Panel.ZIndex="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Panel.ZIndex)}"
                                Background="{x:Null}"
                                Focusable="False">
                            <ContentPresenter x:Name="PART_SelectedContentHost"
                                              Margin="{TemplateBinding Padding}"
                                              ContentSource="SelectedContent"
                                              ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                              ContentTemplate="{TemplateBinding ContentTemplate}"
                                              ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                              Focusable="False"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                    </DockPanel>

                    <ControlTemplate.Triggers>
                        <Trigger Property="HorizontalContentAlignment" Value="Stretch">
                            <Setter TargetName="CenteredHeaderPanel" Property="Visibility" Value="Visible" />
                            <Setter TargetName="HeaderPanel" Property="Visibility" Value="Collapsed" />
                        </Trigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="HorizontalContentAlignment" Value="Center" />
                                <Condition Property="eye:TabAssist.HasUniformTabWidth" Value="False" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="HeaderPanel" Property="Visibility" Value="Visible" />
                                <Setter TargetName="CenteredHeaderPanel" Property="Visibility" Value="Collapsed" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="HorizontalContentAlignment" Value="Center" />
                                <Condition Property="eye:TabAssist.HasUniformTabWidth" Value="True" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="HeaderPanel" Property="Visibility" Value="Collapsed" />
                                <Setter TargetName="CenteredHeaderPanel" Property="Visibility" Value="Visible" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="HorizontalContentAlignment" Value="Left" />
                                <Condition Property="eye:TabAssist.HasUniformTabWidth" Value="False" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="HeaderPanel" Property="Visibility" Value="Visible" />
                                <Setter TargetName="CenteredHeaderPanel" Property="Visibility" Value="Collapsed" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="HorizontalContentAlignment" Value="Left" />
                                <Condition Property="eye:TabAssist.HasUniformTabWidth" Value="True" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="HeaderPanel" Property="Visibility" Value="Collapsed" />
                                <Setter TargetName="CenteredHeaderPanel" Property="Visibility" Value="Visible" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="HorizontalContentAlignment" Value="Right" />
                                <Condition Property="eye:TabAssist.HasUniformTabWidth" Value="False" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="HeaderPanel" Property="Visibility" Value="Visible" />
                                <Setter TargetName="CenteredHeaderPanel" Property="Visibility" Value="Collapsed" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="HorizontalContentAlignment" Value="Right" />
                                <Condition Property="eye:TabAssist.HasUniformTabWidth" Value="True" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="HeaderPanel" Property="Visibility" Value="Collapsed" />
                                <Setter TargetName="CenteredHeaderPanel" Property="Visibility" Value="Visible" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>

                        <Trigger Property="TabStripPlacement" Value="Bottom">
                            <Setter Property="wpf:ShadowAssist.ShadowEdges" Value="Top" />
                            <Setter TargetName="PART_HeaderZone" Property="DockPanel.Dock" Value="Bottom" />
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Left">
                            <Setter Property="wpf:ShadowAssist.ShadowEdges" Value="Right" />
                            <Setter TargetName="CenteredHeaderPanel" Property="Columns" Value="1" />
                            <Setter TargetName="CenteredHeaderPanel" Property="Rows" Value="0" />
                            <Setter TargetName="PART_HeaderZone" Property="DockPanel.Dock" Value="Left" />
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Right">
                            <Setter Property="wpf:ShadowAssist.ShadowEdges" Value="Left" />
                            <Setter TargetName="CenteredHeaderPanel" Property="Columns" Value="1" />
                            <Setter TargetName="CenteredHeaderPanel" Property="Rows" Value="0" />
                            <Setter TargetName="PART_HeaderZone" Property="DockPanel.Dock" Value="Right" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="wpf:ColorZoneAssist.Mode" Value="PrimaryMid" />
        <Setter Property="wpf:RippleAssist.Feedback" Value="{DynamicResource MaterialDesignFlatButtonRipple}" />
        <Setter Property="wpf:ShadowAssist.ShadowEdges" Value="Bottom" />
        <Setter Property="eye:TabAssist.HasUniformTabWidth" Value="False" />
    </Style>

    <Style x:Key="FastTabControl"
           TargetType="{x:Type TabControl}"
           BasedOn="{StaticResource FastTabControlBase}">
        <Setter Property="wpf:ColorZoneAssist.Background" Value="Transparent" />
        <Setter Property="wpf:ShadowAssist.ShadowEdges" Value="None" />
        <Setter Property="eye:TabAssist.HasFilledTab" Value="False" />
    </Style>

    <Style x:Key="FastTabControlUniform"
           TargetType="{x:Type TabControl}"
           BasedOn="{StaticResource FastTabControl}">
        <Setter Property="eye:TabAssist.HasUniformTabWidth" Value="True" />
    </Style>

    <Style x:Key="FastTabControlFilled"
           TargetType="{x:Type TabControl}"
           BasedOn="{StaticResource FastTabControlBase}">
        <Setter Property="eye:TabAssist.HasFilledTab" Value="True" />

        <Style.Triggers>
            <Trigger Property="wpf:ColorZoneAssist.Mode" Value="Standard">
                <Setter Property="wpf:ColorZoneAssist.Background" Value="{DynamicResource MaterialDesignBody}" />
                <Setter Property="wpf:ColorZoneAssist.Foreground" Value="{DynamicResource MaterialDesignBody}" />
            </Trigger>
            <Trigger Property="wpf:ColorZoneAssist.Mode" Value="PrimaryMid">
                <Setter Property="wpf:ColorZoneAssist.Background" Value="{DynamicResource PrimaryHueMidBrush}" />
                <Setter Property="wpf:ColorZoneAssist.Foreground"
                        Value="{DynamicResource PrimaryHueMidForegroundBrush}" />
            </Trigger>
            <Trigger Property="wpf:ColorZoneAssist.Mode" Value="PrimaryLight">
                <Setter Property="wpf:ColorZoneAssist.Background" Value="{DynamicResource PrimaryHueLightBrush}" />
                <Setter Property="wpf:ColorZoneAssist.Foreground"
                        Value="{DynamicResource PrimaryHueLightForegroundBrush}" />
            </Trigger>
            <Trigger Property="wpf:ColorZoneAssist.Mode" Value="PrimaryDark">
                <Setter Property="wpf:ColorZoneAssist.Background" Value="{DynamicResource PrimaryHueDarkBrush}" />
                <Setter Property="wpf:ColorZoneAssist.Foreground"
                        Value="{DynamicResource PrimaryHueDarkForegroundBrush}" />
            </Trigger>
            <Trigger Property="wpf:ColorZoneAssist.Mode" Value="SecondaryLight">
                <Setter Property="wpf:ColorZoneAssist.Background" Value="{DynamicResource SecondaryHueLightBrush}" />
                <Setter Property="wpf:ColorZoneAssist.Foreground"
                        Value="{DynamicResource SecondaryHueLightForegroundBrush}" />
            </Trigger>
            <Trigger Property="wpf:ColorZoneAssist.Mode" Value="SecondaryMid">
                <Setter Property="wpf:ColorZoneAssist.Background" Value="{DynamicResource SecondaryHueMidBrush}" />
                <Setter Property="wpf:ColorZoneAssist.Foreground"
                        Value="{DynamicResource SecondaryHueMidForegroundBrush}" />
            </Trigger>
            <Trigger Property="wpf:ColorZoneAssist.Mode" Value="SecondaryDark">
                <Setter Property="wpf:ColorZoneAssist.Background" Value="{DynamicResource SecondaryHueDarkBrush}" />
                <Setter Property="wpf:ColorZoneAssist.Foreground"
                        Value="{DynamicResource SecondaryHueDarkForegroundBrush}" />
            </Trigger>
            <Trigger Property="wpf:ColorZoneAssist.Mode" Value="Custom">
                <Setter Property="wpf:ColorZoneAssist.Background"
                        Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(wpf:ColorZoneAssist.Background)}" />
                <Setter Property="wpf:ColorZoneAssist.Foreground"
                        Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(wpf:ColorZoneAssist.Foreground)}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="FastTabItem" TargetType="{x:Type TabItem}">
        <Setter Property="Padding" Value="0" />
        <Setter Property="Height" Value="30" />
        <Setter Property="MinWidth" Value="16" />

        <Setter Property="Background" Value="Transparent" />
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
        <!-- Foreground is for the content, not the header -->
        <Setter Property="Foreground"
                Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type TabControl}}, Path=(TextElement.Foreground)}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="SelectHorizontalTabItem">
                            <DoubleAnimation Storyboard.TargetName="ScaleTransform"
                                             Storyboard.TargetProperty="ScaleY"
                                             From="0"
                                             To="1"
                                             Duration="0" />
                            <DoubleAnimation Storyboard.TargetName="ScaleTransform"
                                             Storyboard.TargetProperty="ScaleX"
                                             From="0"
                                             To="1"
                                             Duration="0:0:0.3">
                                <DoubleAnimation.EasingFunction>
                                    <SineEase EasingMode="EaseOut" />
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                            <DoubleAnimation BeginTime="0:0:0.3"
                                             Storyboard.TargetName="PART_BackgroundSelection"
                                             Storyboard.TargetProperty="Opacity"
                                             To="0.12"
                                             Duration="0" />
                        </Storyboard>
                        <Storyboard x:Key="SelectVerticalTabItem">
                            <DoubleAnimation Storyboard.TargetName="ScaleTransform"
                                             Storyboard.TargetProperty="ScaleX"
                                             From="0"
                                             To="1"
                                             Duration="0" />
                            <DoubleAnimation Storyboard.TargetName="ScaleTransform"
                                             Storyboard.TargetProperty="ScaleY"
                                             From="0"
                                             To="1"
                                             Duration="0:0:0.3">
                                <DoubleAnimation.EasingFunction>
                                    <SineEase EasingMode="EaseOut" />
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                            <DoubleAnimation BeginTime="0:0:0.3"
                                             Storyboard.TargetName="PART_BackgroundSelection"
                                             Storyboard.TargetProperty="Opacity"
                                             To="0.12"
                                             Duration="0" />
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid x:Name="Root">
                        <!-- This is the Header label ColorZone. -->
                        <wpf:ColorZone x:Name="ColorZoneHeader"
                                       HorizontalAlignment="Stretch"
                                       VerticalAlignment="Stretch"
                                       wpf:ColorZoneAssist.Background="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(wpf:ColorZoneAssist.Background)}"
                                       wpf:ColorZoneAssist.Foreground="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(wpf:ColorZoneAssist.Foreground)}"
                                       Focusable="False"
                                       Mode="Custom">
                            <wpf:Ripple x:Name="contentPresenter"
                                        Padding="{TemplateBinding Padding}"
                                        HorizontalContentAlignment="Center"
                                        VerticalContentAlignment="Center"
                                        Content="{TemplateBinding Header}"
                                        ContentStringFormat="{TemplateBinding HeaderStringFormat}"
                                        ContentTemplate="{TemplateBinding HeaderTemplate}"
                                        ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
                                        Focusable="False"
                                        Opacity=".82"
                                        RecognizesAccessKey="True"
                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                        TextBlock.FontSize="14"
                                        TextBlock.FontWeight="Medium"
                                        TextOptions.TextFormattingMode="Ideal"
                                        TextOptions.TextRenderingMode="Auto"
                                        Typography.Capitals="{TemplateBinding Typography.Capitals}" />
                        </wpf:ColorZone>
                        <Border x:Name="SelectionHighlightBorder"
                                BorderBrush="{Binding Path=Foreground, ElementName=ColorZoneHeader}"
                                BorderThickness="0,0,0,2"
                                RenderTransformOrigin="0.5,0.5"
                                Visibility="Hidden">
                            <Border.RenderTransform>
                                <ScaleTransform x:Name="ScaleTransform" ScaleX="0" ScaleY="0" />
                            </Border.RenderTransform>
                            <Rectangle x:Name="PART_BackgroundSelection"
                                       IsHitTestVisible="False"
                                       Fill="{TemplateBinding Background}"
                                       Opacity="0.0" />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.38" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="SelectionHighlightBorder" Property="Visibility" Value="Visible" />
                            <Setter TargetName="contentPresenter" Property="Opacity" Value="1" />
                            <Setter TargetName="contentPresenter" Property="wpf:RippleAssist.IsDisabled" Value="True" />
                        </Trigger>
                        <DataTrigger
                            Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}"
                            Value="Bottom">
                            <Setter TargetName="SelectionHighlightBorder" Property="BorderThickness" Value="0,2,0,0" />
                        </DataTrigger>
                        <DataTrigger
                            Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}"
                            Value="Left">
                            <Setter TargetName="SelectionHighlightBorder" Property="BorderThickness" Value="0,0,2,0" />
                        </DataTrigger>
                        <DataTrigger
                            Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}"
                            Value="Right">
                            <Setter TargetName="SelectionHighlightBorder" Property="BorderThickness" Value="2,0,0,0" />
                        </DataTrigger>

                        <!-- Selected TabItem animations (vary depending on TabControl.TabStripPlacement value) -->
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSelected}"
                                           Value="True" />
                                <Condition
                                    Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}"
                                    Value="Top" />
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource SelectHorizontalTabItem}" />
                            </MultiDataTrigger.EnterActions>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSelected}"
                                           Value="True" />
                                <Condition
                                    Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}"
                                    Value="Bottom" />
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource SelectHorizontalTabItem}" />
                            </MultiDataTrigger.EnterActions>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSelected}"
                                           Value="True" />
                                <Condition
                                    Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}"
                                    Value="Left" />
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource SelectVerticalTabItem}" />
                            </MultiDataTrigger.EnterActions>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSelected}"
                                           Value="True" />
                                <Condition
                                    Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}"
                                    Value="Right" />
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource SelectVerticalTabItem}" />
                            </MultiDataTrigger.EnterActions>
                        </MultiDataTrigger>

                        <!-- Force the header foreground do be MaterialDesignBody by default (only for not filled tabs) -->
                        <Trigger Property="eye:TabAssist.HasFilledTab" Value="False">
                            <Setter TargetName="ColorZoneHeader" Property="wpf:ColorZoneAssist.Foreground"
                                    Value="{DynamicResource MaterialDesignBody}" />
                        </Trigger>

                        <!-- The header foreground color change when focused (only for not filled tabs) -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="eye:TabAssist.HasFilledTab" Value="False" />
                                <Condition Property="IsSelected" Value="True" />
                                <Condition Property="wpf:ColorZoneAssist.Mode" Value="Standard" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="ColorZoneHeader" Property="wpf:ColorZoneAssist.Foreground"
                                    Value="{DynamicResource MaterialDesignBody}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="eye:TabAssist.HasFilledTab" Value="False" />
                                <Condition Property="IsSelected" Value="True" />
                                <Condition Property="wpf:ColorZoneAssist.Mode" Value="PrimaryLight" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="ColorZoneHeader" Property="wpf:ColorZoneAssist.Foreground"
                                    Value="{DynamicResource PrimaryHueLightBrush}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="eye:TabAssist.HasFilledTab" Value="False" />
                                <Condition Property="IsSelected" Value="True" />
                                <Condition Property="wpf:ColorZoneAssist.Mode" Value="PrimaryMid" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="ColorZoneHeader" Property="wpf:ColorZoneAssist.Foreground"
                                    Value="{DynamicResource PrimaryHueMidBrush}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="eye:TabAssist.HasFilledTab" Value="False" />
                                <Condition Property="IsSelected" Value="True" />
                                <Condition Property="wpf:ColorZoneAssist.Mode" Value="PrimaryDark" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="ColorZoneHeader" Property="wpf:ColorZoneAssist.Foreground"
                                    Value="{DynamicResource PrimaryHueDarkBrush}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="eye:TabAssist.HasFilledTab" Value="False" />
                                <Condition Property="IsSelected" Value="True" />
                                <Condition Property="wpf:ColorZoneAssist.Mode" Value="SecondaryLight" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="ColorZoneHeader" Property="wpf:ColorZoneAssist.Foreground"
                                    Value="{DynamicResource SecondaryHueLightBrush}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="eye:TabAssist.HasFilledTab" Value="False" />
                                <Condition Property="IsSelected" Value="True" />
                                <Condition Property="wpf:ColorZoneAssist.Mode" Value="SecondaryMid" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="ColorZoneHeader" Property="wpf:ColorZoneAssist.Foreground"
                                    Value="{DynamicResource SecondaryHueMidBrush}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="eye:TabAssist.HasFilledTab" Value="False" />
                                <Condition Property="IsSelected" Value="True" />
                                <Condition Property="wpf:ColorZoneAssist.Mode" Value="SecondaryDark" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="ColorZoneHeader" Property="wpf:ColorZoneAssist.Foreground"
                                    Value="{DynamicResource SecondaryHueDarkBrush}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="eye:TabAssist.HasFilledTab" Value="False" />
                                <Condition Property="IsSelected" Value="True" />
                                <Condition Property="wpf:ColorZoneAssist.Mode" Value="Custom" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="ColorZoneHeader" Property="wpf:ColorZoneAssist.Foreground"
                                    Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(wpf:ColorZoneAssist.Foreground)}" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="wpf:ColorZoneAssist.Background" Value="Transparent" />
        <Setter Property="wpf:ColorZoneAssist.Foreground"
                Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type TabControl}}, Path=(wpf:ColorZoneAssist.Foreground)}" />
        <Setter Property="wpf:ColorZoneAssist.Mode"
                Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type TabControl}}, Path=(wpf:ColorZoneAssist.Mode)}" />
        <Setter Property="wpf:RippleAssist.Feedback" Value="{DynamicResource MaterialDesignFlatButtonRipple}" />
        <Setter Property="eye:TabAssist.HasFilledTab"
                Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type TabControl}}, Path=(eye:TabAssist.HasFilledTab)}" />
    </Style>

    <Style TargetType="{x:Type TabControl}" BasedOn="{StaticResource FastTabControl}" />

    <Style TargetType="{x:Type TabItem}" BasedOn="{StaticResource FastTabItem}" />
</eye:SharedResourceDictionary>