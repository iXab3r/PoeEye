<eye:SharedResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                             xmlns:eye="clr-namespace:PoeShared.UI"
                             xmlns:system="clr-namespace:System;assembly=System.Runtime"
                             xmlns:wpf="clr-namespace:PoeShared.Scaffolding.WPF"
                             xmlns:themes="clr-namespace:PoeShared.Themes">
    <eye:SharedResourceDictionary.MergedDictionaries>
        <eye:SharedResourceDictionary Source="pack://application:,,,/PoeShared.Wpf;component/Themes/Converters.xaml" />
        <eye:SharedResourceDictionary Source="pack://application:,,,/PoeShared.Wpf;component/Themes/Colors.xaml" />
        <eye:SharedResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/materialdesigntheme.menu.xaml" />
    </eye:SharedResourceDictionary.MergedDictionaries>

    <Style TargetType="{x:Type Label}" x:Key="IconLabel">
        <Setter Property="FontFamily" Value="{StaticResource FontAwesome}" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="0" />
    </Style>

    <Style TargetType="{x:Type TextBlock}" x:Key="DefaultTextBlockStyleKey">
        <Setter Property="TextAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Height" Value="NaN" />
        <Setter Property="IsHitTestVisible" Value="False" />
        <Setter Property="ToolTipService.ShowDuration" Value="{x:Static system:Int32.MaxValue}" />
        <Setter Property="ToolTipService.ShowOnDisabled" Value="True" />
        <Setter Property="ToolTipService.InitialShowDelay" Value="0" />
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.66" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type wpf:OutlinedTextBlock}" x:Key="DefaultOutlinedTextBlockStyleKey">
        <Setter Property="TextAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Height" Value="NaN" />
        <Setter Property="IsHitTestVisible" Value="False" />
        <Setter Property="ToolTipService.ShowDuration" Value="{x:Static system:Int32.MaxValue}" />
        <Setter Property="ToolTipService.ShowOnDisabled" Value="True" />
        <Setter Property="ToolTipService.InitialShowDelay" Value="0" />
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.66" />
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <Style TargetType="{x:Type wpf:OutlinedTextBlock}" BasedOn="{StaticResource DefaultOutlinedTextBlockStyleKey}">
        <Setter Property="Foreground" Value="{DynamicResource MaterialDesignBody}"/>
        <Setter Property="FontFamily" Value="{Binding RelativeSource={RelativeSource Self}, Path=(TextElement.FontFamily)}"/>
        <Setter Property="Stroke" Value="Black"/>
        <Setter Property="StrokeThickness" Value="1"/>
    </Style>

    <Style TargetType="{x:Type TextBlock}" x:Key="IconTextBlock" BasedOn="{StaticResource DefaultTextBlockStyleKey}">
        <Setter Property="FontFamily" Value="{StaticResource FontAwesome}" />
        <Setter Property="FontSize" Value="14" />
    </Style>
    
    <Style TargetType="{x:Type TextBlock}" x:Key="HeaderIconTextBlock" BasedOn="{StaticResource IconTextBlock}">
        <Setter Property="FontSize" Value="16" />
    </Style>
    
    <Style TargetType="{x:Type TextBlock}" x:Key="HeaderTextBlock" BasedOn="{StaticResource DefaultTextBlockStyleKey}">
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="FontSize" Value="14" />
    </Style>

    <Style TargetType="{x:Type TextBlock}" x:Key="InformationIconTextBlock" BasedOn="{StaticResource IconTextBlock}">
        <Setter Property="FontSize" Value="16" />
        <Setter Property="Text" Value="{x:Static themes:AwesomeIcons.InfoIcon}" />
        <Setter Property="IsHitTestVisible" Value="True" />
        <Setter Property="Foreground" Value="{StaticResource MouseOverAccentBrushKey}" />
    </Style>

    <Style TargetType="{x:Type TextBlock}" x:Key="ErrorIconTextBlock" BasedOn="{StaticResource IconTextBlock}">
        <Setter Property="Text" Value="{x:Static themes:AwesomeIcons.ErrorIcon}" />
        <Setter Property="Foreground" Value="{StaticResource NegativeBrush}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="IsHitTestVisible" Value="True" />
    </Style>

    <Style TargetType="{x:Type TextBlock}" x:Key="WarningIconTextBlock" BasedOn="{StaticResource IconTextBlock}">
        <Setter Property="Text" Value="{x:Static themes:AwesomeIcons.Warning}" />
        <Setter Property="Foreground" Value="{StaticResource WarningBrush}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="IsHitTestVisible" Value="True" />
    </Style>
    
    <Style TargetType="{x:Type TextBlock}" x:Key="NotificationIconTextBlock" BasedOn="{StaticResource IconTextBlock}">
        <Setter Property="Text" Value="{x:Static themes:AwesomeIcons.Exclamation}" />
        <Setter Property="Foreground" Value="{StaticResource NeutralBrush}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="FontSize" Value="10" />
        <Setter Property="IsHitTestVisible" Value="True" />
    </Style>


    <Style TargetType="{x:Type TextBox}" x:Key="CircleTextBox">
        <Setter Property="FontFamily" Value="{StaticResource FontAwesome}" />
        <Setter Property="TextAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="Width" Value="24" />
        <Setter Property="Height" Value="24" />
        <Setter Property="FontWeight" Value="DemiBold" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">

                    <Grid Width="{TemplateBinding Width}" Height="{TemplateBinding Height}"
                          Margin="{TemplateBinding Padding}">
                        <Ellipse Fill="{TemplateBinding Background}"
                                 Stroke="{TemplateBinding BorderBrush}"
                                 StrokeThickness="{TemplateBinding BorderThickness}" />

                        <TextBlock Text="{TemplateBinding Text}"
                                   VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                   HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                   Foreground="{TemplateBinding Foreground}"
                                   TextAlignment="{TemplateBinding TextAlignment}"
                                   TextWrapping="{TemplateBinding TextWrapping}"
                                   TextDecorations="{TemplateBinding TextDecorations}"
                                   FontSize="{TemplateBinding FontSize}"
                                   FontFamily="{TemplateBinding FontFamily}" />
                    </Grid>

                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="TextChanged">
                            <BeginStoryboard>
                                <Storyboard />
                            </BeginStoryboard>

                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style TargetType="{x:Type TextBlock}" x:Key="OverlayWindowTextBlockStyleKey">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.23" />

                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation To="0.4" Storyboard.TargetProperty="Opacity" Duration="0:0:0.3" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>

                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation To="1" Storyboard.TargetProperty="Opacity" Duration="0:0:0.3" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
        </Style.Triggers>
    </Style>

</eye:SharedResourceDictionary>