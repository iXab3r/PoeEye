<eye:SharedResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                              xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                              xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
                              xmlns:eye="clr-namespace:PoeShared.UI"
                              xmlns:st="http://schemas.spicytaco.io/"
                              xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
                              xmlns:wpf="clr-namespace:PoeShared.Scaffolding.WPF">
    <eye:SharedResourceDictionary.MergedDictionaries>
        <eye:SharedResourceDictionary Source="pack://application:,,,/PoeShared.Wpf;component/Themes/Converters.xaml" />
        <eye:SharedResourceDictionary Source="pack://application:,,,/PoeShared.Wpf;component/Themes/Colors.xaml" />
        <eye:SharedResourceDictionary Source="pack://application:,,,/PoeShared.Wpf;component/Themes/Styles.common.xaml" />
        <eye:SharedResourceDictionary Source="pack://application:,,,/PoeShared.Wpf;component/Themes/Styles.checkbox.xaml" />
        <eye:SharedResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/materialdesigntheme.menu.xaml" />
    </eye:SharedResourceDictionary.MergedDictionaries>

    <Style x:Key="FastTextBoxStyle" TargetType="{x:Type TextBox}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="CaretBrush" Value="White" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="BorderBrush" Value="{DynamicResource MaterialDesignTextBoxBorder}" />
        <Setter Property="materialDesign:TextFieldAssist.UnderlineBrush" Value="{DynamicResource MaterialDesignTextBoxBorder}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBoxBase}">
                    <Border x:Name="PART_ContentHost"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            Margin="{TemplateBinding Padding}" />
                    <ControlTemplate.Triggers>
                        <Trigger Property="materialDesign:TextFieldAssist.HasFilledTextField" Value="False">
                            <Setter Property="materialDesign:HintAssist.FloatingOffset" Value="1,0" />
                            <Setter Property="materialDesign:HintAssist.HelperTextFontSize">
                                <Setter.Value>
                                    <Binding RelativeSource="{RelativeSource Self}" Path="FontSize" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>

                        <!-- IsEnabled -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_ContentHost" Property="BorderBrush" Value="Transparent" />
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="True" />
                                <Condition Property="IsReadOnly" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_ContentHost" Property="BorderThickness" Value="0 0 0 1" />
                            <Setter TargetName="PART_ContentHost" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(materialDesign:TextFieldAssist.UnderlineBrush)}" />
                        </MultiTrigger>

                        <!-- IsKeyboardFocused -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsKeyboardFocused" Value="True" />
                                <Condition Property="IsReadOnly" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter Property="materialDesign:TextFieldAssist.TextBoxViewMargin" Value="0, 2,0,0" />
                            <Setter TargetName="PART_ContentHost" Property="BorderThickness" Value="0 0 0 2" />
                            <Setter TargetName="PART_ContentHost" Property="BorderBrush" Value="{DynamicResource PrimaryHueMidBrush}" />
                        </MultiTrigger>

                        <!-- IsMouseOver -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_ContentHost" Property="BorderBrush" Value="{DynamicResource PrimaryHueMidBrush}" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MinimalTextBoxStyle" TargetType="{x:Type TextBox}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="CaretBrush" Value="White" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBoxBase}">
                    <Border x:Name="PART_ContentHost"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            Margin="{TemplateBinding Padding}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TextBoxAsLabelStyle" TargetType="{x:Type TextBox}" BasedOn="{StaticResource FastTextBoxStyle}">
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="IsReadOnly" Value="True" />
        <Setter Property="IsReadOnlyCaretVisible" Value="True" />
    </Style>

    <Style x:Key="DefaultTextBoxStyle" TargetType="{x:Type TextBox}">
        <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type FrameworkElement}}, Path=(TextElement.Foreground)}" />
        <Setter Property="BorderBrush" Value="{DynamicResource MaterialDesignTextBoxBorder}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0 0 0 1" />
        <Setter Property="CaretBrush" Value="{DynamicResource PrimaryHueMidBrush}" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="AllowDrop" Value="true" />
        <Setter Property="Padding" Value="0 4" />
        <Setter Property="Height" Value="32" />
        <Setter Property="materialDesign:TextFieldAssist.TextBoxViewMargin" Value="0, 1,0,0" />
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="Validation.ErrorTemplate" Value="{StaticResource IconErrorValidationTemplate}" />
        <Setter Property="materialDesign:HintAssist.Foreground" Value="{DynamicResource MaterialDesignBody}" />
        <Setter Property="materialDesign:HintAssist.IsFloating" Value="True" />
        <Setter Property="materialDesign:HintAssist.FloatingOffset" Value="1, -24" />
        <Setter Property="materialDesign:HintAssist.FontFamily" Value="{Binding RelativeSource={RelativeSource Self}, Path=FontFamily}" />
        <Setter Property="materialDesign:HintAssist.HelperTextFontSize">
            <Setter.Value>
                <MultiBinding Converter="{StaticResource MultiplicationConverter}">
                    <Binding RelativeSource="{RelativeSource Self}" Path="FontSize" />
                    <Binding RelativeSource="{RelativeSource Self}" Path="(materialDesign:HintAssist.FloatingScale)" />
                </MultiBinding>
            </Setter.Value>
        </Setter>
        <Setter Property="materialDesign:TextFieldAssist.DecorationVisibility" Value="Visible" />
        <Setter Property="materialDesign:TextFieldAssist.HasFilledTextField"
                Value="{Binding RelativeSource={RelativeSource Self}, Path=Text, Converter={StaticResource NullToFalseConverter}}" />
        <Setter Property="ContextMenu" Value="{StaticResource MaterialDesignDefaultContextMenu}" />
        <Setter Property="Cursor" Value="IBeam" />
        <Setter Property="KeyboardNavigation.TabNavigation" Value="Local" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Grid
                        x:Name="TextBoxRoot"
                        MinWidth="1">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>

                        <Border x:Name="PART_ContentHost"
                                Grid.Column="0"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                Margin="{Binding Path=(materialDesign:TextFieldAssist.TextBoxViewMargin), RelativeSource={RelativeSource TemplatedParent}}"
                                Padding="{TemplateBinding Padding}" />

                        <TextBlock
                            x:Name="SuffixTextBlock"
                            Grid.Column="1"
                            FontSize="{TemplateBinding FontSize}"
                            IsHitTestVisible="True"
                            Visibility="{TemplateBinding materialDesign:TextFieldAssist.SuffixText, Converter={StaticResource NullToCollapsedConverter}}"
                            Opacity="{TemplateBinding materialDesign:HintAssist.HintOpacity}"
                            Text="{TemplateBinding materialDesign:TextFieldAssist.SuffixText}" />

                        <TextBlock
                            Grid.Column="0" Grid.Row="0" Grid.ColumnSpan="2"
                            x:Name="FloatingHint"
                            Margin="{TemplateBinding materialDesign:HintAssist.FloatingOffset, Converter={StaticResource PointToThicknessConverter}}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            Opacity="{TemplateBinding materialDesign:HintAssist.HintOpacity}"
                            Foreground="{TemplateBinding materialDesign:HintAssist.Foreground}"
                            FontFamily="{TemplateBinding materialDesign:HintAssist.FontFamily}"
                            FontSize="{TemplateBinding materialDesign:HintAssist.HelperTextFontSize}"
                            FontWeight="Bold"
                            Text="{TemplateBinding materialDesign:HintAssist.Hint}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="materialDesign:TextFieldAssist.HasFilledTextField" Value="False">
                            <Setter Property="materialDesign:HintAssist.FloatingOffset" Value="1,0" />
                            <Setter Property="materialDesign:HintAssist.HelperTextFontSize">
                                <Setter.Value>
                                    <Binding RelativeSource="{RelativeSource Self}" Path="FontSize" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>

                        <!-- IsEnabled -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_ContentHost" Property="BorderBrush" Value="Transparent" />
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="True" />
                                <Condition Property="IsReadOnly" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_ContentHost" Property="BorderThickness" Value="0 0 0 1" />
                            <Setter TargetName="PART_ContentHost" Property="BorderBrush" Value="{DynamicResource MaterialDesignTextBoxBorder}" />
                        </MultiTrigger>

                        <!-- IsKeyboardFocused -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsKeyboardFocused" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="materialDesign:TextFieldAssist.TextBoxViewMargin" Value="0, 2,0,0" />
                            <Setter TargetName="PART_ContentHost" Property="BorderThickness" Value="0 0 0 2" />
                            <Setter TargetName="PART_ContentHost" Property="BorderBrush" Value="{DynamicResource PrimaryHueMidBrush}" />
                        </MultiTrigger>

                        <!-- IsMouseOver -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_ContentHost" Property="BorderBrush" Value="{DynamicResource PrimaryHueMidBrush}" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true" />
                    <Condition Property="IsSelectionActive" Value="false" />
                </MultiTrigger.Conditions>
                <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}" />
            </MultiTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ExpandableTextBoxStyle" TargetType="{x:Type TextBox}">
        <Setter Property="Foreground" Value="{StaticResource OverlayForegroundBrushKey}" />
        <Setter Property="Background" Value="{StaticResource OverlayBackgroundBrushKey}" />
        <Setter Property="BorderBrush" Value="{StaticResource MouseOverAccentBrushKey}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <st:StackPanel Orientation="Vertical" x:Name="TextEditorContainer" Fill="Fill" IsHitTestVisible="{TemplateBinding IsHitTestVisible}">
                        <st:StackPanel Orientation="Horizontal" Fill="Fill">
                            <TextBox
                                x:Name="ActualTextEditor"
                                st:StackPanel.Fill="Fill"
                                VerticalAlignment="Stretch"
                                IsReadOnly="{TemplateBinding IsReadOnly}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Foreground="{TemplateBinding Foreground}"
                                Background="{TemplateBinding Background}"
                                Text="{Binding RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay, Path=Text}">
                                <i:Interaction.Behaviors>
                                    <wpf:IgnoreMouseWheelBehavior IsEnabled="True" />
                                </i:Interaction.Behaviors>
                            </TextBox>
                            <CheckBox ToolTip="Expand editor"
                                      x:Name="EditorToggle"
                                      Style="{StaticResource ToggleCheckBoxStyle}">
                                <TextBlock Text="&#xf0f6;" Style="{StaticResource IconTextBlock}" />
                            </CheckBox>
                        </st:StackPanel>

                        <materialDesign:PopupEx
                            x:Name="EditorPopup"
                            PlacementTarget="{Binding ElementName=ActualTextEditor}"
                            Placement="Relative"
                            Width="{Binding ElementName=ActualTextEditor, Path=ActualWidth}"
                            Height="300"
                            StaysOpen="False"
                            IsOpen="{Binding ElementName=EditorToggle, Path=IsChecked}"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch">

                            <Border Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}">
                                <TextBox
                                    st:StackPanel.Fill="Fill"
                                    TextWrapping="Wrap"
                                    Height="NaN" Width="NaN"
                                    wpf:FocusHelper.IsFocused="{Binding ElementName=EditorPopup, Path=IsOpen, Mode=OneWay}"
                                    Foreground="{TemplateBinding Foreground}"
                                    Background="{TemplateBinding Background}"
                                    BorderThickness="0"
                                    Text="{Binding RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay, Path=Text}" />
                            </Border>
                        </materialDesign:PopupEx>
                    </st:StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsReadOnly" Value="True">
                            <Setter TargetName="EditorToggle" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</eye:SharedResourceDictionary>