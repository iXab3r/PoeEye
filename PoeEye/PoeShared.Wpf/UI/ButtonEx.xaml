<eye:SharedResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                             xmlns:eye="clr-namespace:PoeShared.UI"
                             xmlns:st="http://schemas.spicytaco.io/">
    <eye:SharedResourceDictionary.MergedDictionaries>
        <eye:SharedResourceDictionary Source="pack://application:,,,/PoeShared.Wpf;component/Themes/Converters.xaml" />
        <eye:SharedResourceDictionary Source="pack://application:,,,/PoeShared.Wpf;component/Themes/Colors.xaml" />
        <eye:SharedResourceDictionary Source="pack://application:,,,/PoeShared.Wpf;component/Themes/CommandWrapperView.xaml" />
    </eye:SharedResourceDictionary.MergedDictionaries>


    <Style TargetType="{x:Type TextBlock}"
           BasedOn="{StaticResource ErrorIconTextBlock}"
           x:Key="CommandWrapperIndicatorErrorStyleKey" />

    <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource ErrorIconTextBlock}"
           x:Key="CommandWrapperIndicatorSuccessStyleKey">
        <Setter Property="Visibility" Value="Collapsed" />
        <Setter Property="Opacity" Value="1" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Foreground" Value="{StaticResource PositiveBrush}" />
        <Setter Property="Text" Value="&#xf00c;" />
    </Style>

    <Style x:Key="ButtonExStyleBase" TargetType="{x:Type eye:ButtonEx}">
        <Setter Property="BorderBrush" Value="{x:Null}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Margin" Value="2.5" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
    </Style>
    
     <Style x:Key="FastButtonExStyle" TargetType="{x:Type eye:ButtonEx}" BasedOn="{StaticResource ButtonExStyleBase}">
        <Setter Property="Content" Value="{Binding RelativeSource={RelativeSource Self}, Path=Icon}"/>
        <Setter Property="FontFamily" Value="{StaticResource FontAwesome}"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type eye:ButtonEx}">
                    <Border
                        Focusable="False"
                        CornerRadius="{TemplateBinding CornerRadius}"
                        Width="{TemplateBinding Width}"
                        Height="{TemplateBinding Height}"
                        MinWidth="{TemplateBinding MinWidth}"
                        MinHeight="{TemplateBinding MinHeight}"
                        Background="{TemplateBinding Background}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                        VerticalAlignment="{TemplateBinding VerticalAlignment}"
                        IsHitTestVisible="{TemplateBinding IsHitTestVisible}"
                        ToolTip="{TemplateBinding ToolTip}">
                        <ContentPresenter x:Name="ContentLabel"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          TextElement.FontFamily="{TemplateBinding FontFamily}"
                                          TextElement.Foreground="{TemplateBinding Foreground}"
                                          Margin="{TemplateBinding Padding}"
                                          Content="{Binding Path=Content, RelativeSource={RelativeSource TemplatedParent}}"
                                          Visibility="{Binding Path=Content, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource NullToCollapsedConverter}}" />
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.66" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="ContentLabel" Property="TextElement.Foreground" Value="{StaticResource MouseOverAccentBrushKey}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DefaultButtonExStyle" TargetType="{x:Type eye:ButtonEx}" BasedOn="{StaticResource ButtonExStyleBase}">
        <Setter Property="Padding" Value="-5,0,0,0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type eye:ButtonEx}">
                    <Border
                        Focusable="False"
                        CornerRadius="{TemplateBinding CornerRadius}"
                        Width="{TemplateBinding Width}"
                        Height="{TemplateBinding Height}"
                        MinWidth="{TemplateBinding MinWidth}"
                        MinHeight="{TemplateBinding MinHeight}"
                        Background="{TemplateBinding Background}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                        VerticalAlignment="{TemplateBinding VerticalAlignment}"
                        IsHitTestVisible="{TemplateBinding IsHitTestVisible}"
                        Padding="{TemplateBinding Margin}"
                        ToolTip="{TemplateBinding ToolTip}">
                        <st:StackPanel Margin="2.5"
                                       MarginBetweenChildren="5"
                                       HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                       VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                       Orientation="Horizontal">
                            <Grid>
                                <ContentControl x:Name="IconLabel"
                                                Foreground="{TemplateBinding Foreground}"
                                                FontSize="{TemplateBinding FontSize}"
                                                FontFamily="{StaticResource FontAwesome}"
                                                HorizontalAlignment="Stretch"
                                                Content="{Binding Icon, RelativeSource={RelativeSource TemplatedParent}}"
                                                Visibility="{Binding Icon, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource NullToCollapsedConverter}}"
                                                MinWidth="20" />
                                <TextBlock x:Name="ErrorIcon" FontSize="{TemplateBinding FontSize}"
                                           ToolTip="{Binding Command.Error, RelativeSource={RelativeSource TemplatedParent}}"
                                           Style="{StaticResource CommandWrapperIndicatorErrorStyleKey}"
                                           MinWidth="20" />
                                <TextBlock x:Name="SuccessIcon" FontSize="{TemplateBinding FontSize}"
                                           Style="{StaticResource CommandWrapperIndicatorSuccessStyleKey}"
                                           MinWidth="20" />
                                <ProgressBar Style="{StaticResource MaterialDesignCircularProgressBar}" x:Name="CommandProgressBar"
                                             Value="0" Width="16" Height="16"
                                             HorizontalAlignment="Center" VerticalAlignment="Center"
                                             Foreground="{StaticResource PositiveBrush}"
                                             IsIndeterminate="True"
                                             Margin="-5,0,0,0">
                                    <ProgressBar.Visibility>
                                        <Binding Path="Command.IsBusy"
                                                 RelativeSource="{RelativeSource TemplatedParent}"
                                                 Converter="{StaticResource TrueToVisibleFalseToCollapsedConverter}"
                                                 TargetNullValue="{x:Static Visibility.Collapsed}"
                                                 FallbackValue="{x:Static Visibility.Collapsed}" />
                                    </ProgressBar.Visibility>
                                </ProgressBar>
                            </Grid>
                            <ContentPresenter x:Name="ContentLabel"
                                              TextElement.Foreground="{TemplateBinding Foreground}"
                                              Margin="{TemplateBinding Padding}"
                                              Content="{Binding Path=Content, RelativeSource={RelativeSource TemplatedParent}}"
                                              Visibility="{Binding Path=Content, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource NullToCollapsedConverter}}" />
                        </st:StackPanel>
                    </Border>

                    <ControlTemplate.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Command.Error, RelativeSource={RelativeSource Self}}" Value="{x:Null}" />
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard TargetName="ErrorIcon">
                                        <ObjectAnimationUsingKeyFrames
                                            Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Collapsed}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiDataTrigger.EnterActions>

                            <MultiDataTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard TargetName="ErrorIcon">
                                        <DoubleAnimation
                                            Storyboard.TargetProperty="Opacity"
                                            From="1"
                                            To="0"
                                            Duration="0:0:15" />

                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Visible}" />
                                            <DiscreteObjectKeyFrame KeyTime="0:0:15" Value="{x:Static Visibility.Collapsed}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiDataTrigger.ExitActions>
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Value="True">
                                    <Condition.Binding>
                                        <MultiBinding Converter="{StaticResource MultiBooleanOrConverter}">
                                            <Binding Path="Command.IsBusy" RelativeSource="{RelativeSource Self}" />
                                            <Binding Path="Command.Error" RelativeSource="{RelativeSource Self}" Converter="{StaticResource IsNotNullOrEmptyConverter}" />
                                        </MultiBinding>
                                    </Condition.Binding>
                                </Condition>
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard TargetName="SuccessIcon">
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Collapsed}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiDataTrigger.EnterActions>

                            <MultiDataTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard TargetName="SuccessIcon">
                                        <DoubleAnimation
                                            Storyboard.TargetProperty="Opacity"
                                            From="1"
                                            To="0"
                                            Duration="0:0:1" />
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Visible}" />
                                            <DiscreteObjectKeyFrame KeyTime="0:0:1" Value="{x:Static Visibility.Collapsed}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiDataTrigger.ExitActions>
                        </MultiDataTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.66" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="{StaticResource MouseOverAccentBrushKey}" />
                        </Trigger>
                        <Trigger Property="Command" Value="{x:Null}">
                            <Setter TargetName="CommandProgressBar" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger SourceName="SuccessIcon" Property="Visibility" Value="Visible">
                            <Setter TargetName="IconLabel" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger SourceName="ErrorIcon" Property="Visibility" Value="Visible">
                            <Setter TargetName="IconLabel" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type eye:ButtonEx}" BasedOn="{StaticResource DefaultButtonExStyle}" />
</eye:SharedResourceDictionary>