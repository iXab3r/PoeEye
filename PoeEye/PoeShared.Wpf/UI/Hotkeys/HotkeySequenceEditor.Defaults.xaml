<eye:SharedResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                             xmlns:st="http://schemas.spicytaco.io/"
                             xmlns:eye="clr-namespace:PoeShared.UI"
                             xmlns:dd="urn:gong-wpf-dragdrop">
    <eye:SharedResourceDictionary.MergedDictionaries>
        <eye:SharedResourceDictionary Source="pack://application:,,,/PoeShared.Wpf;component/Themes/Colors.xaml" />
        <eye:SharedResourceDictionary Source="pack://application:,,,/PoeShared.Wpf;component/Themes/Converters.xaml" />
        <eye:SharedResourceDictionary Source="pack://application:,,,/PoeShared.Wpf;component/Themes/Styles.xaml" />
        <eye:SharedResourceDictionary Source="pack://application:,,,/PoeShared.Wpf;component/UI/ButtonEx.xaml" />
    </eye:SharedResourceDictionary.MergedDictionaries>

    <SolidColorBrush x:Key="SequenceEditorTextBackground" Color="#664C00" />
    <SolidColorBrush x:Key="SequenceEditorKeyBackground" Color="#660019" />
    <SolidColorBrush x:Key="SequenceEditorAccent" Color="#00A9E0" />
    <SolidColorBrush x:Key="SequenceEditorBackground" Color="#00222D" />
    <SolidColorBrush x:Key="SequenceEditorDefaultBackground" Color="Gray" />
    <SolidColorBrush x:Key="SequenceEditorTextForeground" Color="White" />

    <eye:HotkeySequenceEditorItemVisibilityConverter x:Key="HotkeySequenceEditorItemVisibilityConverter" />

    <DataTemplate DataType="{x:Type eye:RecordingNotificationViewModel}">
        <st:StackPanel Orientation="Vertical" MarginBetweenChildren="5">
            <ProgressBar Minimum="0" Value="{Binding Controller.Owner.TotalCount, Mode=OneWay}" Maximum="{Binding Controller.Owner.MaxItemsCount, Mode=OneWay}" />
            <eye:ButtonEx
                Opacity="0.5"
                x:Name="Container"
                CornerRadius="5"
                Padding="5"
                Background="{StaticResource SequenceEditorBackground}"
                BorderBrush="{StaticResource SequenceEditorAccent}"
                Foreground="{StaticResource SequenceEditorTextForeground}"
                Style="{StaticResource FastButtonExStyle}"
                Command="{Binding Controller.StopRecording}">
                <eye:ButtonEx.Content>
                    <st:StackPanel MarginBetweenChildren="5" Orientation="Horizontal">
                        <TextBlock x:Name="RecordingIcon" Style="{StaticResource IconTextBlock}" Text="" FontSize="20" Width="40" TextAlignment="Right" />
                        <st:StackPanel Orientation="Vertical" MarginBetweenChildren="5" VerticalAlignment="Center">
                            <TextBlock x:Name="RecordingText" Visibility="{Binding RelativeSource={RelativeSource Self}, Path=Text, Converter={StaticResource NullToCollapsedConverter}}" />
                            <TextBlock x:Name="RecordingHotkeyText" Visibility="{Binding RelativeSource={RelativeSource Self}, Path=Text, Converter={StaticResource NullToCollapsedConverter}}" />
                        </st:StackPanel>
                        <TextBlock FontWeight="Bold" TextAlignment="Right"
                                   Width="120"
                                   Visibility="{Binding Controller.MouseLocation, Converter={StaticResource NullToCollapsedConverter}}"
                                   Text="{Binding Controller.MouseLocation, Converter={StaticResource StringFormatConverter}, ConverterParameter='{}{0}', TargetNullValue=''}" />
                    </st:StackPanel>
                </eye:ButtonEx.Content>
            </eye:ButtonEx>
            <ProgressBar Minimum="0" Value="{Binding Controller.TotalDuration.TotalMilliseconds, Mode=OneWay}" Maximum="{Binding Controller.Owner.MaxDuration.TotalMilliseconds, Mode=OneWay}" />
        </st:StackPanel>
        
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding Controller.RecordStartTime, Converter={StaticResource NullToTrueConverter}}" Value="False">
                <Setter TargetName="RecordingText" Property="Text" Value="Recording..."></Setter>
                <Setter TargetName="RecordingIcon" Property="Text" Value="&#xf04d;"></Setter>
                <Setter TargetName="RecordingIcon" Property="Foreground" Value="{StaticResource NegativeBrush}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Controller.RecordStartTime, Converter={StaticResource NullToTrueConverter}}" Value="True">
                <Setter TargetName="RecordingIcon" Property="Text" Value="&#xf01d;"></Setter>
                <Setter TargetName="RecordingIcon" Property="Foreground" Value="{StaticResource PositiveBrush}"/>
            </DataTrigger>
            
            <Trigger SourceName="Container" Property="IsMouseOver" Value="True">
                <Setter TargetName="Container" Property="BorderBrush" Value="{StaticResource SequenceEditorAccent}" />
                <Setter TargetName="Container" Property="Foreground" Value="{StaticResource SequenceEditorAccent}" />
                <Setter TargetName="Container" Property="Opacity" Value="1" />
            </Trigger>
             
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Controller.RecordStartTime, Converter={StaticResource NullToTrueConverter}}" Value="False"/>
                    <Condition Binding="{Binding Controller.ToggleRecordingHotkey.Value.IsEmpty}" Value="False"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter TargetName="RecordingHotkeyText" Property="Text" Value="{Binding Controller.ToggleRecordingHotkey.Value, StringFormat='Press {0} to STOP  recording'}"></Setter>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Controller.RecordStartTime, Converter={StaticResource NullToTrueConverter}}" Value="True"/>
                    <Condition Binding="{Binding Controller.ToggleRecordingHotkey.Value.IsEmpty}" Value="False"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter TargetName="RecordingHotkeyText" Property="Text" Value="{Binding Controller.ToggleRecordingHotkey.Value, StringFormat='Press {0} to START recording'}"></Setter>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <Style x:Key="HotkeySequenceEditorButtonStyle" TargetType="{x:Type eye:ButtonEx}" BasedOn="{StaticResource FastButtonExStyle}">
        <Setter Property="Padding" Value="5,2.5" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderBrush" Value="{StaticResource SequenceEditorAccent}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="HotkeySequenceCheckBoxStyle" TargetType="{x:Type CheckBox}">
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Padding" Value="10,0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Label Style="{StaticResource IconLabel}"
                           Content="{TemplateBinding Content}"
                           Margin="{TemplateBinding Padding}"
                           Focusable="{TemplateBinding Focusable}"
                           VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                           HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" />

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="{StaticResource SequenceEditorAccent}" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Foreground" Value="{StaticResource SequenceEditorAccent}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="HotkeySequenceTextBoxStyle" TargetType="{x:Type TextBox}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="CaretBrush" Value="White"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBoxBase}">
                    <Decorator Margin="0"
                               x:Name="PART_ContentHost" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</eye:SharedResourceDictionary>