<eye:SharedResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
                             xmlns:eye="clr-namespace:PoeShared.UI"
                             xmlns:st="http://schemas.spicytaco.io/"
                             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
                             xmlns:wpf="clr-namespace:PoeShared.Scaffolding.WPF">
    <eye:SharedResourceDictionary.MergedDictionaries>
        <eye:SharedResourceDictionary Source="pack://application:,,,/PoeShared.Wpf;component/UI/Hotkeys/HotkeySequenceEditor.Defaults.xaml" />
    </eye:SharedResourceDictionary.MergedDictionaries>

    <DataTemplate DataType="{x:Type eye:HotkeySequenceText}">
        <Border x:Name="TextItem"
                BorderThickness="1"
                BorderBrush="{x:Null}"
                Background="{StaticResource SequenceEditorTextBackground}"
                Cursor="Hand"
                ToolTip="{Binding Text}"
                TextBlock.Foreground="{StaticResource SequenceEditorTextForeground}"
                Height="36" MinWidth="64" VerticalAlignment="Center"
                CornerRadius="5"
                Padding="5,0">
            <st:StackPanel Orientation="Horizontal" MarginBetweenChildren="5">
                <TextBlock Text="{Binding Text, Converter={StaticResource MultilineToSinglelineConverter}}"
                           MaxWidth="128"
                           TextTrimming="CharacterEllipsis"
                           st:StackPanel.Fill="Fill"
                           HorizontalAlignment="Center"
                           Foreground="{StaticResource SequenceEditorTextForeground}" />
                <materialDesign:PopupBox VerticalContentAlignment="Stretch"
                                         x:Name="EditPopup"
                                         Visibility="Collapsed"
                                         Padding="0"
                                         PopupMode="Click"
                                         StaysOpen="True"
                                         PlacementMode="LeftAndAlignMiddles">
                    <materialDesign:PopupBox.ToggleContent>
                        <TextBlock Style="{StaticResource IconTextBlock}"
                                   Text="&#xf044;"
                                   Foreground="{StaticResource SequenceEditorTextForeground}" />
                    </materialDesign:PopupBox.ToggleContent>
                    <TextBox Width="300" Height="150"
                             TextWrapping="Wrap"
                             Padding="4"
                             AcceptsReturn="True"
                             Foreground="{StaticResource SequenceEditorTextForeground}"
                             VerticalContentAlignment="Stretch"
                             HorizontalContentAlignment="Stretch"
                             wpf:FocusHelper.IsFocused="True"
                             Text="{Binding Text, UpdateSourceTrigger=PropertyChanged}">
                        <i:Interaction.Behaviors>
                            <wpf:SelectAllOnFocusBehavior />
                        </i:Interaction.Behaviors>
                    </TextBox>
                </materialDesign:PopupBox>

            </st:StackPanel>

        </Border>

        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListViewItem}}, Path=IsSelected}"
                         Value="True">
                <Setter TargetName="TextItem" Property="TextBlock.Foreground" Value="{StaticResource SequenceEditorAccent}" />
                <Setter TargetName="EditPopup" Property="Visibility" Value="Visible" />
                <Setter TargetName="TextItem" Property="BorderBrush" Value="{StaticResource SequenceEditorAccent}" />
                <Setter TargetName="TextItem" Property="Background" Value="{StaticResource SequenceEditorBackground}" />
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <DataTemplate DataType="{x:Type eye:HotkeySequenceDelay}">
        <st:StackPanel Orientation="Vertical" Cursor="Hand" Background="Transparent" VerticalAlignment="Center" MinWidth="36">
            <TextBox Text="{Binding Delay, Converter={StaticResource TimeSpanToMillisecondsConverter}}"
                     x:Name="FirstLineText"
                     Foreground="{StaticResource SequenceEditorTextForeground}"
                     FontSize="16" FontWeight="Bold" Padding="0"
                     HorizontalAlignment="Center" />
            <Separator />
            <TextBlock Text="ms"
                       x:Name="SecondLineText"
                       Foreground="{StaticResource SequenceEditorTextForeground}"
                       FontWeight="Bold"
                       HorizontalAlignment="Center" />
        </st:StackPanel>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListViewItem}}, Path=IsSelected}"
                         Value="True">
                <Setter TargetName="FirstLineText" Property="TextBlock.Foreground" Value="{StaticResource SequenceEditorAccent}" />
                <Setter TargetName="SecondLineText" Property="TextBlock.Foreground" Value="{StaticResource SequenceEditorAccent}" />
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <DataTemplate DataType="{x:Type eye:HotkeySequenceHotkey}">
        <st:StackPanel x:Name="HotkeyContainer" Orientation="Vertical" MarginBetweenChildren="0"
                       TextBlock.Foreground="{StaticResource SequenceEditorTextForeground}"
                       Cursor="Hand">
            <TextBlock x:Name="KeyUp" Style="{StaticResource IconTextBlock}" Text="&#xf106;" HorizontalAlignment="Center" VerticalAlignment="Bottom"
                       Visibility="Hidden" />
            <Border x:Name="KeyItem"
                    BorderThickness="1"
                    BorderBrush="{x:Null}"
                    Background="{StaticResource SequenceEditorKeyBackground}"
                    Visibility="Collapsed"
                    Height="36" MinWidth="36" VerticalAlignment="Center"
                    CornerRadius="5" Padding="5,0">
                <TextBlock Text="{Binding Hotkey.Key, Converter={StaticResource KeyToStringConverter}}"
                           FontWeight="Bold"
                           FontSize="16"
                           HorizontalAlignment="Center" />
            </Border>
            <Border x:Name="MouseItem"
                    BorderThickness="1"
                    BorderBrush="{x:Null}"
                    Visibility="Collapsed"
                    Height="36" MinWidth="36"
                    VerticalAlignment="Center"
                    CornerRadius="5" Padding="5,0">
                <Image x:Name="MouseImage" />
            </Border>
            <TextBlock x:Name="KeyDown" Style="{StaticResource IconTextBlock}" Text="&#xf107;" HorizontalAlignment="Center" VerticalAlignment="Top"
                       Visibility="Hidden" />
        </st:StackPanel>
        
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListViewItem}}, Path=IsSelected}"
                         Value="True">
                <Setter TargetName="HotkeyContainer" Property="TextBlock.Foreground" Value="{StaticResource SequenceEditorAccent}" />
                <Setter TargetName="KeyItem" Property="BorderBrush" Value="{StaticResource SequenceEditorAccent}" />
                <Setter TargetName="KeyItem" Property="Background" Value="{StaticResource SequenceEditorBackground}" />
                <Setter TargetName="MouseItem" Property="BorderBrush" Value="{StaticResource SequenceEditorAccent}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsDown}" Value="True">
                <Setter TargetName="KeyDown" Property="Visibility" Value="Visible" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsDown}" Value="False">
                <Setter TargetName="KeyUp" Property="Visibility" Value="Visible" />
            </DataTrigger>

            <DataTrigger Binding="{Binding IsMouse}" Value="True">
                <Setter TargetName="MouseItem" Property="Visibility" Value="Visible" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsMouse}" Value="False">
                <Setter TargetName="KeyItem" Property="Visibility" Value="Visible" />
            </DataTrigger>

            <DataTrigger Binding="{Binding Hotkey.MouseButton}" Value="{x:Static MouseButton.Left}">
                <Setter TargetName="MouseImage" Property="Source" Value="../../Resources/mouse-device-left-click-control.png" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Hotkey.MouseButton}" Value="{x:Static MouseButton.Right}">
                <Setter TargetName="MouseImage" Property="Source" Value="../../Resources/mouse-device-right-click-control.png" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Hotkey.MouseButton}" Value="{x:Static MouseButton.Middle}">
                <Setter TargetName="MouseImage" Property="Source" Value="../../Resources/mouse-device-middle-click-control.png" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Hotkey.MouseButton}" Value="{x:Static MouseButton.XButton1}">
                <Setter TargetName="MouseImage" Property="Source" Value="../../Resources/mouse-device-xbutton1-click-control.png" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Hotkey.MouseButton}" Value="{x:Static MouseButton.XButton2}">
                <Setter TargetName="MouseImage" Property="Source" Value="../../Resources/mouse-device-xbutton2-click-control.png" />
            </DataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding HasMousePosition}" Value="True"/>
                    <Condition Binding="{Binding IsRelative}" Value="False"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter TargetName="MouseImage" Property="Source" Value="../../Resources/CursorAbsolute.png" />
                    <Setter TargetName="MouseImage" Property="ToolTip" Value="{Binding MousePosition}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding HasMousePosition}" Value="True"/>
                    <Condition Binding="{Binding IsRelative}" Value="True"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter TargetName="MouseImage" Property="Source" Value="../../Resources/CursorRelative.png" />
                    <Setter TargetName="MouseImage" Property="ToolTip" Value="{Binding MousePosition}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>
</eye:SharedResourceDictionary>