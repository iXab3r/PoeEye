<eye:SharedResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                              xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                              xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
                              xmlns:eye="clr-namespace:PoeShared.UI"
                              xmlns:st="http://schemas.spicytaco.io/"
                              xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
                              xmlns:wpf="clr-namespace:PoeShared.Scaffolding.WPF">
    <eye:SharedResourceDictionary.MergedDictionaries>
        <eye:SharedResourceDictionary Source="pack://application:,,,/PoeShared.Wpf;component/UI/Hotkeys/HotkeySequenceEditor.Defaults.xaml" />
    </eye:SharedResourceDictionary.MergedDictionaries>

    <DataTemplate DataType="{x:Type eye:HotkeySequenceText}">
        <Border x:Name="TextItem"
                BorderThickness="1"
                BorderBrush="{x:Null}"
                Background="{StaticResource SequenceEditorTextBackground}"
                Cursor="Hand"
                TextBlock.Foreground="{StaticResource SequenceEditorTextForeground}"
                Height="36" MinWidth="64" VerticalAlignment="Center"
                CornerRadius="5"
                Padding="5,0">
            <st:StackPanel Orientation="Horizontal" MarginBetweenChildren="5">
                <st:StackPanel Orientation="Horizontal" Fill="Fill" Background="Transparent">
                    <TextBlock x:Name="ActualTextBlock" 
                               Text="{Binding Text, Converter={StaticResource MultilineToSinglelineConverter}}"
                               MaxWidth="250"
                               TextTrimming="CharacterEllipsis"
                               st:StackPanel.Fill="Fill"
                               HorizontalAlignment="Center"
                               ToolTip="{Binding Text}"
                               Foreground="{StaticResource SequenceEditorTextForeground}" />
                    <CheckBox ToolTip="Expand editor"
                              x:Name="EditorToggle"
                              Style="{StaticResource ToggleCheckBoxStyle}">
                        <TextBlock Text="&#xf044;" Style="{StaticResource IconTextBlock}" />
                    </CheckBox>
                    
                    <i:Interaction.Triggers>
                        <wpf:MouseLeftButtonDownTrigger ClickCount="2">
                            <wpf:SetPropertyAction TargetObject="{Binding ElementName=EditorToggle}" PropertyName="IsChecked" PropertyValue="{StaticResource TrueValue}" />
                        </wpf:MouseLeftButtonDownTrigger>
                    </i:Interaction.Triggers>
                </st:StackPanel>

                <materialDesign:PopupEx
                    x:Name="EditorPopup"
                    PlacementTarget="{Binding ElementName=ActualTextBlock}"
                    Placement="Relative"
                    Width="300"
                    Height="200"
                    StaysOpen="False"
                    IsOpen="{Binding ElementName=EditorToggle, Path=IsChecked}"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Stretch">

                    <Border Background="{StaticResource OverlayBackgroundBrushKey}"
                            BorderBrush="{StaticResource MouseOverAccentBrushKey}"
                            BorderThickness="1">
                        <TextBox Width="NaN" Height="NaN"
                                 TextWrapping="Wrap"
                                 Padding="4"
                                 AcceptsReturn="True"
                                 Foreground="{StaticResource OverlayForegroundBrushKey}"
                                 VerticalContentAlignment="Stretch"
                                 HorizontalContentAlignment="Stretch"
                                 Style="{StaticResource HotkeySequenceTextBoxStyle}"
                                 Text="{Binding Text, UpdateSourceTrigger=LostFocus}">
                            <i:Interaction.Behaviors>
                                <wpf:SelectAllOnFocusBehavior WaitForText="True" />
                            </i:Interaction.Behaviors>
                        </TextBox>
                    </Border>
                </materialDesign:PopupEx>
            </st:StackPanel>

        </Border>

        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListViewItem}}, Path=IsSelected}"
                         Value="True">
                <Setter TargetName="TextItem" Property="TextBlock.Foreground" Value="{StaticResource SequenceEditorAccent}" />
                <Setter TargetName="TextItem" Property="BorderBrush" Value="{StaticResource SequenceEditorAccent}" />
                <Setter TargetName="TextItem" Property="Background" Value="{StaticResource SequenceEditorBackground}" />
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <DataTemplate DataType="{x:Type eye:HotkeySequenceDelay}">
        <st:StackPanel Orientation="Vertical" Cursor="Hand" Background="Transparent" VerticalAlignment="Center" MinWidth="36">
            <TextBox Text="{Binding Delay, Converter={StaticResource TimeSpanToMillisecondsConverter}, UpdateSourceTrigger=PropertyChanged}"
                     x:Name="FirstLineText"
                     Style="{StaticResource HotkeySequenceTextBoxStyle}"
                     Foreground="{StaticResource SequenceEditorTextForeground}"
                     FontSize="16" FontWeight="Bold" Padding="0"
                     HorizontalAlignment="Center" />
            <Separator />
            <TextBlock Text="ms"
                       x:Name="SecondLineText"
                       Foreground="{StaticResource SequenceEditorTextForeground}"
                       FontWeight="Bold"
                       HorizontalAlignment="Center" />
        </st:StackPanel>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListViewItem}}, Path=IsSelected}"
                         Value="True">
                <Setter TargetName="FirstLineText" Property="TextBlock.Foreground" Value="{StaticResource SequenceEditorAccent}" />
                <Setter TargetName="SecondLineText" Property="TextBlock.Foreground" Value="{StaticResource SequenceEditorAccent}" />
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <DataTemplate DataType="{x:Type eye:HotkeySequenceHotkey}">
        <st:StackPanel x:Name="HotkeyContainer" Orientation="Vertical" MarginBetweenChildren="0"
                       TextBlock.Foreground="{StaticResource SequenceEditorTextForeground}"
                       Cursor="Hand">
            <TextBlock x:Name="KeyUp" Style="{StaticResource IconTextBlock}" Text="&#xf106;" HorizontalAlignment="Center" VerticalAlignment="Bottom"
                       Visibility="Hidden" />
            <Border x:Name="KeyItem"
                    BorderThickness="1"
                    BorderBrush="{x:Null}"
                    Background="{StaticResource SequenceEditorKeyBackground}"
                    Visibility="Collapsed"
                    Height="36" MinWidth="36" VerticalAlignment="Center"
                    CornerRadius="5">
                <eye:HotKeyBox
                    x:Name="HotkeyBox"
                    AcceptsTab="True"
                    AcceptsMouseKeys="False"
                    AcceptsModifiers="True"
                    AcceptsMouseWheel="False"
                    AcceptsReturn="True"
                    IsEnabled="{Binding IsInEditMode}"
                    HotKey="{Binding Hotkey}"
                    HorizontalContentAlignment="Center"
                    FontWeight="Bold"
                    FontSize="16"
                    Padding="5,0" />
            </Border>
            <Border x:Name="MouseItem"
                    BorderThickness="1"
                    BorderBrush="{x:Null}"
                    Visibility="Collapsed"
                    Height="36" MinWidth="36"
                    VerticalAlignment="Center"
                    CornerRadius="5" Padding="5,0">
                <Image x:Name="MouseImage" />
            </Border>
            <TextBlock x:Name="KeyDown" Style="{StaticResource IconTextBlock}" Text="&#xf107;" HorizontalAlignment="Center" VerticalAlignment="Top"
                       Visibility="Hidden" />

            <i:Interaction.Triggers>
                <wpf:MouseLeftButtonDownTrigger ClickCount="2">
                    <wpf:SetPropertyAction TargetObject="{Binding}" PropertyName="IsInEditMode" PropertyValue="{StaticResource TrueValue}" />
                </wpf:MouseLeftButtonDownTrigger>
            </i:Interaction.Triggers>
        </st:StackPanel>

        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListViewItem}}, Path=IsSelected}"
                         Value="True">
                <Setter TargetName="HotkeyContainer" Property="TextBlock.Foreground" Value="{StaticResource SequenceEditorAccent}" />
                <Setter TargetName="KeyItem" Property="BorderBrush" Value="{StaticResource SequenceEditorAccent}" />
                <Setter TargetName="KeyItem" Property="Background" Value="{StaticResource SequenceEditorBackground}" />
                <Setter TargetName="MouseItem" Property="BorderBrush" Value="{StaticResource SequenceEditorAccent}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsInEditMode}" Value="True">
                <Setter TargetName="HotkeyBox" Property="wpf:FocusHelper.IsFocused" Value="True" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsDown}" Value="True">
                <Setter TargetName="KeyDown" Property="Visibility" Value="Visible" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsDown}" Value="False">
                <Setter TargetName="KeyUp" Property="Visibility" Value="Visible" />
            </DataTrigger>

            <DataTrigger Binding="{Binding IsMouse}" Value="True">
                <Setter TargetName="MouseItem" Property="Visibility" Value="Visible" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsMouse}" Value="False">
                <Setter TargetName="KeyItem" Property="Visibility" Value="Visible" />
            </DataTrigger>

            <DataTrigger Binding="{Binding Hotkey.MouseButton}" Value="{x:Static MouseButton.Left}">
                <Setter TargetName="MouseImage" Property="Source" Value="{StaticResource MouseDeviceLeftImage}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Hotkey.MouseButton}" Value="{x:Static MouseButton.Right}">
                <Setter TargetName="MouseImage" Property="Source" Value="{StaticResource MouseDeviceRightImage}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Hotkey.MouseButton}" Value="{x:Static MouseButton.Middle}">
                <Setter TargetName="MouseImage" Property="Source" Value="{StaticResource MouseDeviceMiddleImage}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Hotkey.MouseButton}" Value="{x:Static MouseButton.XButton1}">
                <Setter TargetName="MouseImage" Property="Source" Value="{StaticResource MouseDeviceXButton1Image}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Hotkey.MouseButton}" Value="{x:Static MouseButton.XButton2}">
                <Setter TargetName="MouseImage" Property="Source" Value="{StaticResource MouseDeviceXButton2Image}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Hotkey.MouseWheel}" Value="{x:Static eye:MouseWheelAction.WheelDown}">
                <Setter TargetName="MouseImage" Property="Source" Value="{StaticResource MouseDeviceWheelDownImage}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Hotkey.MouseWheel}" Value="{x:Static eye:MouseWheelAction.WheelUp}">
                <Setter TargetName="MouseImage" Property="Source" Value="{StaticResource MouseDeviceWheelUpImage}" />
            </DataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding HasMousePosition}" Value="True" />
                    <Condition Binding="{Binding IsRelative}" Value="False" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter TargetName="MouseImage" Property="Source" Value="{StaticResource CursorAbsoluteImage}" />
                    <Setter TargetName="MouseImage" Property="ToolTip" Value="{Binding MousePosition}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding HasMousePosition}" Value="True" />
                    <Condition Binding="{Binding IsRelative}" Value="True" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter TargetName="MouseImage" Property="Source" Value="{StaticResource CursorRelativeImage}" />
                    <Setter TargetName="MouseImage" Property="ToolTip" Value="{Binding MousePosition}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>
</eye:SharedResourceDictionary>