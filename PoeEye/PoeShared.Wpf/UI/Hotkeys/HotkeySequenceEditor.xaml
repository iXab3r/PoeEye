<eye:SharedResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                              xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                              xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
                              xmlns:dd="urn:gong-wpf-dragdrop"
                              xmlns:st="http://schemas.spicytaco.io/"
                              xmlns:eye="clr-namespace:PoeShared.UI"
                              xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
                              xmlns:scaffolding="clr-namespace:PoeShared.Scaffolding">
    <eye:SharedResourceDictionary.MergedDictionaries>
        <eye:SharedResourceDictionary Source="pack://application:,,,/PoeShared.Wpf;component/Themes/Converters.xaml" />
        <eye:SharedResourceDictionary Source="pack://application:,,,/PoeShared.Wpf;component/Themes/Colors.xaml" />
        <eye:SharedResourceDictionary Source="pack://application:,,,/PoeShared.Wpf;component/UI/Hotkeys/HotkeySequenceEditor.Defaults.xaml" />
        <eye:SharedResourceDictionary Source="pack://application:,,,/PoeShared.Wpf;component/UI/Hotkeys/HotkeySequenceEditor.Osd.xaml" />
        <eye:SharedResourceDictionary Source="pack://application:,,,/PoeShared.Wpf;component/UI/Hotkeys/HotkeySequenceEditor.Items.xaml" />
    </eye:SharedResourceDictionary.MergedDictionaries>

    <DataTemplate DataType="{x:Type eye:HotkeySequenceEditorViewModel}" x:Key="HotkeySequenceActionsButton">
        <st:StackPanel Fill="Fill" Orientation="Vertical" MarginBetweenChildren="2.5" VerticalAlignment="Center">
            <Button
                x:Name="StopRecordingButton"
                Foreground="{StaticResource NegativeBrush}"
                Width="32" Height="32"
                BorderBrush="Transparent" BorderThickness="1"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Stretch"
                materialDesign:ButtonProgressAssist.IsIndicatorVisible="True"
                materialDesign:ButtonProgressAssist.IsIndeterminate="False"
                materialDesign:ButtonProgressAssist.Maximum="{Binding MaxDuration.TotalMilliseconds, Mode=OneWay}"
                materialDesign:ButtonProgressAssist.Value="{Binding TotalDuration.TotalMilliseconds, Mode=OneWay}"
                RenderTransformOrigin="0.5,0.5">
                <Button.RenderTransform>
                    <ScaleTransform CenterX="0.5" CenterY="0.5" />
                </Button.RenderTransform>
                <Button.Style>
                    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource MaterialDesignFloatingActionButton}" />
                </Button.Style>
                <Button.Content>
                    <TextBlock x:Name="RecordingIcon" Style="{StaticResource IconTextBlock}" Text="&#xf04d;" FontSize="20" />
                </Button.Content>
                <b:Interaction.Triggers>
                    <b:EventTrigger EventName="PreviewMouseLeftButtonDown">
                        <b:InvokeCommandAction Command="{Binding Controller.StopRecording}" />
                    </b:EventTrigger>
                </b:Interaction.Triggers>
            </Button>
            <Button
                x:Name="StartRecordingButton"
                Height="32" Width="32"
                materialDesign:ButtonProgressAssist.IsIndicatorVisible="True"
                materialDesign:ButtonProgressAssist.IsIndeterminate="False"
                materialDesign:ButtonProgressAssist.Maximum="{Binding MaxDuration.TotalMilliseconds, Mode=OneWay}"
                materialDesign:ButtonProgressAssist.Value="{Binding TotalDuration.TotalMilliseconds, Mode=OneWay}"
                Style="{StaticResource MaterialDesignFloatingActionButton}"
                Command="{Binding Controller.StartRecording}"
                Foreground="{StaticResource SequenceEditorTextForeground}"
                BorderBrush="{StaticResource SequenceEditorAccent}" BorderThickness="1"
                ToolTip="Start recording">
                <Button.Content>
                    <Ellipse Width="16" Height="16" Fill="{StaticResource NegativeBrush}" Stroke="{StaticResource SequenceEditorTextForeground}" />
                </Button.Content>
            </Button>
        </st:StackPanel>

        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding Controller.IsRecording}" Value="True">
                <Setter TargetName="StopRecordingButton" Property="Visibility" Value="Visible" />
                <Setter TargetName="StartRecordingButton" Property="Visibility" Value="Collapsed" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Controller.IsRecording}" Value="False">
                <Setter TargetName="StopRecordingButton" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="StartRecordingButton" Property="Visibility" Value="Visible" />
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <DataTemplate x:Key="HotkeySequenceActionsTemplate">
        <ContentPresenter
            dd:DragDrop.DragSourceIgnore="True"
            ContentTemplate="{StaticResource HotkeySequenceActionsButton}"
            Content="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type eye:HotkeySequenceEditor}}, Path=ViewModel}" />
    </DataTemplate>

    <DataTemplate x:Key="HotkeySequenceEditorMenuTemplate" DataType="{x:Type eye:HotkeySequenceEditorViewModel}">
        <st:StackPanel MarginBetweenChildren="5" Orientation="Horizontal">
            <Image Source="pack://application:,,,/PoeShared.Wpf;component/Resources/DragDropWhite.png" ToolTip="Drag and drop items" Height="32" Width="32" />
            <eye:ButtonEx
                Command="{Binding Controller.StartRecording}"
                Style="{StaticResource HotkeySequenceEditorButtonStyle}"
                HorizontalAlignment="Left" CornerRadius="5"
                Foreground="{StaticResource SequenceEditorTextForeground}"
                Visibility="{Binding Controller.IsRecording, Converter={StaticResource TrueToCollapsedFalseToVisibleConverter}}"
                Width="80"
                Background="{StaticResource SequenceEditorKeyBackground}">
                RECORD
                <eye:ButtonEx.Icon>
                    <Ellipse Width="10" Height="10" Fill="{StaticResource NegativeBrush}" Stroke="{StaticResource SequenceEditorTextForeground}" />
                </eye:ButtonEx.Icon>
            </eye:ButtonEx>
            <eye:ButtonEx
                Command="{Binding Controller.StopRecording}"
                Style="{StaticResource HotkeySequenceEditorButtonStyle}"
                HorizontalAlignment="Left" CornerRadius="5"
                Width="80"
                Foreground="{StaticResource NegativeBrush}"
                Visibility="{Binding Controller.IsRecording, Converter={StaticResource TrueToVisibleFalseToCollapsedConverter}}">
                STOP
                <eye:ButtonEx.Icon>
                    &#xf04d;
                </eye:ButtonEx.Icon>
            </eye:ButtonEx>
            <eye:ButtonEx
                Command="{Binding AddItem}"
                CommandParameter="{Binding DefaultItemDelay}"
                Style="{StaticResource HotkeySequenceEditorButtonStyle}"
                Icon="&#xf017;" HorizontalAlignment="Left" CornerRadius="5"
                dd:DragDrop.IsDragSource="True"
                Foreground="{StaticResource SequenceEditorTextForeground}"
                Background="{StaticResource SequenceEditorDefaultBackground}">
                DELAY
            </eye:ButtonEx>
            <eye:ButtonEx
                Command="{Binding AddItem}"
                CommandParameter="{Binding DefaultItemText}"
                dd:DragDrop.IsDragSource="True"
                Style="{StaticResource HotkeySequenceEditorButtonStyle}"
                Icon="&#xf040;" HorizontalAlignment="Left" CornerRadius="5"
                Foreground="{StaticResource SequenceEditorTextForeground}"
                Background="{StaticResource SequenceEditorTextBackground}">
                TEXT
            </eye:ButtonEx>
            <Separator />
            <CheckBox
                x:Name="KeyboardPopupToggle">
                <st:StackPanel MarginBetweenChildren="2.5" Orientation="Horizontal">
                    <materialDesign:PackIcon Kind="Keyboard" />
                    <TextBlock Text="KEYBOARD" />
                </st:StackPanel>
            </CheckBox>
            <CheckBox
                x:Name="KeyboardArrowBlockPopupToggle">
                <st:StackPanel MarginBetweenChildren="2.5" Orientation="Horizontal">
                    <materialDesign:PackIcon Kind="NumericSevenBoxMultipleOutline" />
                    <TextBlock Text="NUMPAD" />
                </st:StackPanel>
            </CheckBox>
            <CheckBox
                x:Name="KeyboardSpecialsBlockPopupToggle">
                <st:StackPanel MarginBetweenChildren="2.5" Orientation="Horizontal">
                    <materialDesign:PackIcon Kind="Function" />
                    <TextBlock Text="FN" />
                </st:StackPanel>
            </CheckBox>
            <CheckBox
                x:Name="KeyboardMouseBlockPopupToggle">
                <st:StackPanel MarginBetweenChildren="2.5" Orientation="Horizontal">
                    <materialDesign:PackIcon Kind="Mouse" />
                    <TextBlock Text="MOUSE" />
                </st:StackPanel>
            </CheckBox>
            <eye:ButtonEx
                Command="{Binding MouseMoveCommand}"
                Style="{StaticResource HotkeySequenceEditorButtonStyle}"
                ToolTip="Select screen coordinates"
                HorizontalAlignment="Left" CornerRadius="5"
                Foreground="{StaticResource SequenceEditorTextForeground}">
                <eye:ButtonEx.Icon>
                    <materialDesign:PackIcon Kind="TargetVariant" HorizontalAlignment="Center" VerticalAlignment="Center" />
                </eye:ButtonEx.Icon>
            </eye:ButtonEx>
            <Separator />
            <eye:ButtonEx
                Command="{Binding ClearItems}"
                Style="{StaticResource HotkeySequenceEditorButtonStyle}"
                HorizontalAlignment="Left" CornerRadius="5"
                Icon="&#xf12d;"
                Foreground="{StaticResource SequenceEditorTextForeground}"
                Background="{StaticResource SequenceEditorTextBackground}">
                CLEAR
            </eye:ButtonEx>
            <Separator />

            <TextBlock HorizontalAlignment="Right" st:StackPanel.Fill="Fill"
                       x:Name="DurationLabel">
                <TextBlock.ToolTip>
                    <TextBlock HorizontalAlignment="Center">
                        <TextBlock.Text>
                            <MultiBinding Converter="{StaticResource StringFormatConverter}"
                                          ConverterParameter="{}Current duration: {0} / Max duration of macros: {1}">
                                <Binding Path="TotalDuration"
                                         Converter="{StaticResource TimeSpanToHumanReadableStringConverter}" />
                                <Binding Path="MaxDuration"
                                         Converter="{StaticResource TimeSpanToHumanReadableStringConverter}" />
                            </MultiBinding>
                        </TextBlock.Text>
                    </TextBlock>
                </TextBlock.ToolTip>
                <TextBlock.Text>
                    <MultiBinding Converter="{StaticResource StringFormatConverter}" ConverterParameter="{}{0} / {1}">
                        <Binding Path="TotalDuration"
                                 Converter="{StaticResource TimeSpanToHumanReadableStringConverter}" />
                        <Binding Path="MaxDuration"
                                 Converter="{StaticResource TimeSpanToHumanReadableStringConverter}" />
                    </MultiBinding>
                </TextBlock.Text>
            </TextBlock>

            <materialDesign:PopupEx
                x:Name="KeyboardPopup"
                PlacementTarget="{Binding ElementName=KeyboardPopupToggle}"
                Placement="Top"
                StaysOpen="False"
                IsOpen="{Binding ElementName=KeyboardPopupToggle, Path=IsChecked}"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Stretch">
                <ContentPresenter ContentTemplate="{StaticResource OnScreenKeyboard}" Content="{Binding}" />
            </materialDesign:PopupEx>
            <materialDesign:PopupEx
                x:Name="KeyboardArrowBlockPopup"
                PlacementTarget="{Binding ElementName=KeyboardArrowBlockPopupToggle}"
                Placement="Top"
                StaysOpen="False"
                IsOpen="{Binding ElementName=KeyboardArrowBlockPopupToggle, Path=IsChecked}"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Stretch">
                <ContentPresenter ContentTemplate="{StaticResource OnScreenKeyboardArrowsAndNumpadBlock}" Content="{Binding}" />
            </materialDesign:PopupEx>
            <materialDesign:PopupEx
                x:Name="KeyboardSpecialsBlockPopup"
                PlacementTarget="{Binding ElementName=KeyboardArrowBlockPopupToggle}"
                Placement="Top"
                StaysOpen="False"
                IsOpen="{Binding ElementName=KeyboardSpecialsBlockPopupToggle, Path=IsChecked}"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Stretch">
                <ContentPresenter ContentTemplate="{StaticResource OnScreenKeyboardSpecialsBlock}" Content="{Binding}" />
            </materialDesign:PopupEx>
            <materialDesign:PopupEx
                x:Name="KeyboardMouseBlockPopup"
                PlacementTarget="{Binding ElementName=KeyboardMouseBlockPopupToggle}"
                Placement="Top"
                StaysOpen="False"
                IsOpen="{Binding ElementName=KeyboardMouseBlockPopupToggle, Path=IsChecked}"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Stretch">
                <ContentPresenter ContentTemplate="{StaticResource OnScreenKeyboardMouseBlock}" Content="{Binding}" />
            </materialDesign:PopupEx>
        </st:StackPanel>

        <DataTemplate.Triggers>
            <DataTrigger
                Binding="{Binding MaxDurationExceeded}"
                Value="True">
                <Setter TargetName="DurationLabel" Property="Foreground" Value="{StaticResource NegativeBrush}" />
                <Setter TargetName="DurationLabel" Property="FontWeight" Value="Bold" />
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <Style x:Key="DefaultHotkeySequenceEditorStyle" TargetType="{x:Type eye:HotkeySequenceEditor}">
        <Style.Resources>
            <Style TargetType="{x:Type CheckBox}" BasedOn="{StaticResource HotkeySequenceCheckBoxStyle}" />
            <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource HotkeySequenceTextBoxStyle}" />
            <Style TargetType="{x:Type eye:ButtonEx}" BasedOn="{StaticResource FastButtonExStyle}" />
        </Style.Resources>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Disabled" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="{x:Null}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="dd:DragDrop.DropHandler" Value="{Binding DropTarget, RelativeSource={RelativeSource Self}}" />
        <Setter Property="dd:DragDrop.DragHandler" Value="{Binding DragSource, RelativeSource={RelativeSource Self}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type eye:HotkeySequenceEditor}">
                    <st:StackPanel MarginBetweenChildren="10">
                        <eye:CachedContentControl
                            ContentTemplate="{StaticResource HotkeySequenceEditorMenuTemplate}"
                            Content="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type eye:HotkeySequenceEditor}}, Path=ViewModel}" />
                        <ListView
                            x:Name="PART_ListBox"
                            Focusable="{TemplateBinding Focusable}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            ScrollViewer.VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
                            ScrollViewer.HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                            HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalAlignment}"
                            FocusVisualStyle="{x:Null}"
                            dd:DragDrop.DropHandler="{TemplateBinding DropTarget}"
                            dd:DragDrop.DragHandler="{TemplateBinding DragSource}"
                            dd:DragDrop.IsDragSource="True"
                            dd:DragDrop.IsDropTarget="True"
                            dd:DragDrop.UseDefaultDragAdorner="True"
                            dd:DragDrop.UseDefaultEffectDataTemplate="True"
                            dd:DragDrop.DragDropCopyKeyState="ControlKey"
                            HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch"
                            ItemsSource="{TemplateBinding CollectionView}">
                            <ListView.ItemTemplateSelector>
                                <eye:PlaceholderTemplateSelector
                                    PlaceholderTemplate="{StaticResource HotkeySequenceActionsTemplate}" />
                            </ListView.ItemTemplateSelector>
                            <ListView.Style>
                                <Style TargetType="{x:Type ListView}" />
                            </ListView.Style>
                            <ListView.ItemContainerStyle>
                                <Style TargetType="{x:Type ListViewItem}">
                                    <Setter Property="OverridesDefaultStyle" Value="True" />
                                    <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                                    <Setter Property="Height" Value="64" />
                                    <Setter Property="MinWidth" Value="36" />
                                    <Setter Property="Padding" Value="0" />
                                    <Setter Property="Margin" Value="0,0, 10, 0" />
                                    <Setter Property="Visibility">
                                        <Setter.Value>
                                            <MultiBinding Converter="{StaticResource HotkeySequenceEditorItemVisibilityConverter}">
                                                <Binding />
                                                <Binding Path="ViewModel.HideKeypressDelays"
                                                         RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type eye:HotkeySequenceEditor}}" />
                                            </MultiBinding>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type ListViewItem}">
                                                <ContentPresenter />
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </ListView.ItemContainerStyle>
                            <ListView.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <WrapPanel HorizontalAlignment="Left" />
                                </ItemsPanelTemplate>
                            </ListView.ItemsPanel>
                        </ListView>
                    </st:StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type eye:HotkeySequenceEditor}" BasedOn="{StaticResource DefaultHotkeySequenceEditorStyle}" />
    <DataTemplate DataType="{x:Type eye:HotkeySequenceEditorViewModel}">
        <Grid>
            <eye:HotkeySequenceEditor x:Name="HotkeySequenceEditor" ViewModel="{Binding}" />

            <scaffolding:DataPiping.DataPipes>
                <scaffolding:DataPipeCollection>
                    <scaffolding:DataPipe
                        Source="{Binding ElementName=HotkeySequenceEditor}"
                        Target="{Binding Owner, Mode=OneWayToSource}" />
                </scaffolding:DataPipeCollection>
            </scaffolding:DataPiping.DataPipes>
        </Grid>
    </DataTemplate>
</eye:SharedResourceDictionary>