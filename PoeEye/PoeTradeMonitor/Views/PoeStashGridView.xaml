<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:wpf="clr-namespace:PoeShared.Scaffolding.WPF;assembly=PoeShared"
                    xmlns:blue="http://www.nuget.org/Blue.MVVM"
                    xmlns:scaffolding="clr-namespace:PoeShared.Scaffolding;assembly=PoeShared"
                    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
                    xmlns:system="clr-namespace:System;assembly=mscorlib"
                    xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls"
                    xmlns:viewModels="clr-namespace:PoeEye.TradeMonitor.ViewModels"
                    xmlns:utilities="clr-namespace:PoeEye.Utilities"
                    xmlns:modularity="clr-namespace:PoeEye.TradeMonitor.Modularity"
                    xmlns:scaffolding1="clr-namespace:PoeEye.TradeMonitor.Scaffolding"
                    xmlns:themes="clr-namespace:PoeEye.TradeMonitor.Themes"
                    xmlns:fa="http://schemas.fontawesome.io/icons/">

  <ResourceDictionary.MergedDictionaries>
    <ResourceDictionary Source="pack://application:,,,/PoeShared;component/Themes/Generic.xaml" />
    <ResourceDictionary Source="pack://application:,,,/PoeTradeMonitor;component/Themes/Styles.xaml" />
  </ResourceDictionary.MergedDictionaries>

  <DataTemplate DataType="{x:Type viewModels:PoeStashGridViewModel}">

    <Grid x:Name="TradeMonitorOverlay">

      <Grid TextBlock.Foreground="{StaticResource PoeFontBrush}">
        <Grid.RowDefinitions>
          <RowDefinition Height="36" />
          <RowDefinition Height="30" />
          <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <!-- Header -->
        <Border Grid.Row="0"
                wpf:EnableDragHelper.EnableDrag="True"
                Background="{StaticResource TradeMonitorTitleBackgroundBrushKey}"
                BorderBrush="{StaticResource TradeMonitorBorderBrushKey}"
                BorderThickness="1"
                Visibility="{Binding IsLocked, Converter={StaticResource TrueToHiddenFalseToVisibleConverter}}"
                Margin="3">
          <StackPanel Orientation="Horizontal">
            <Button Command="{Binding LockWindowCommand}" Width="30" Height="30">
              <Button.Style>
                <Style TargetType="{x:Type Button}"
                       BasedOn="{StaticResource TradeMonitorCircleButtonStyleKey}">
                  <Setter Property="Content" Value="&#xf09c;" />
                  <Setter Property="Foreground" Value="Red" />
                  <Setter Property="Padding" Value="0,2,0,0" />
                  <Style.Triggers>
                    <DataTrigger Binding="{Binding IsLocked}" Value="True" />

                    <Trigger Property="IsMouseOver" Value="True">
                      <Setter Property="Content" Value="&#xf023;" />
                      <Setter Property="Foreground" Value="GreenYellow" />
                    </Trigger>
                  </Style.Triggers>
                </Style>
              </Button.Style>

              <Button.Triggers>
                <EventTrigger RoutedEvent="Mouse.MouseEnter">
                  <EventTrigger.EnterActions>
                    <BeginStoryboard>
                      <Storyboard>
                        <DoubleAnimation
                          Storyboard.TargetName="TradeMonitorBackground"
                          Storyboard.TargetProperty="Opacity"
                          From="1"
                          To="0.1"
                          Duration="0:0:1" />
                      </Storyboard>
                    </BeginStoryboard>
                  </EventTrigger.EnterActions>
                </EventTrigger>
                <EventTrigger RoutedEvent="Mouse.MouseLeave">
                  <EventTrigger.EnterActions>
                    <BeginStoryboard>
                      <Storyboard>
                        <DoubleAnimation
                          Storyboard.TargetName="TradeMonitorBackground"
                          Storyboard.TargetProperty="Opacity"
                          To="1"
                          Duration="0:0:1" />
                      </Storyboard>
                    </BeginStoryboard>
                  </EventTrigger.EnterActions>
                </EventTrigger>
              </Button.Triggers>
            </Button>
            <TextBlock Style="{StaticResource TradeMonitorTextBlockStyleKey}"
                       Text="Stash grid"
                       Foreground="#EEC64C"
                       HorizontalAlignment="Center"
                       FontWeight="Bold" />
          </StackPanel>
        </Border>
        
        <!-- Body -->
        <Grid Grid.Row="2"
              Opacity="{Binding Opacity}">

          <ItemsControl ItemsSource="{Binding GridCells}"
                        BorderBrush="Lime"
                        IsHitTestVisible="False"
                        Visibility="{Binding IsLocked, Converter={StaticResource TrueToCollapsedFalseToVisibleConverter}}"
                        BorderThickness="2">
            <ItemsControl.ItemsPanel>
              <ItemsPanelTemplate>
                <UniformGrid Columns="24" Rows="24"  />
              </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
            <ItemsControl.ItemTemplate>
              <DataTemplate DataType="{x:Type viewModels:BasicStashGridCellViewModel}">
                <Border BorderBrush="Blue" Margin="0" BorderThickness="1" Opacity="0.5" />
              </DataTemplate>
            </ItemsControl.ItemTemplate>
          </ItemsControl>

          <ItemsControl ItemsSource="{Binding Highlights}" IsHitTestVisible="False">
            <ItemsControl.ItemsPanel>
              <ItemsPanelTemplate>
                <Grid>
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                  </Grid.ColumnDefinitions>
                  <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                  </Grid.RowDefinitions>
                </Grid>
              </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
            <ItemsControl.ItemContainerStyle>
              <Style>
                <Setter Property="Grid.Row" Value="{Binding Top}"/>
                <Setter Property="Grid.RowSpan" Value="{Binding Height}"/>
                <Setter Property="Grid.Column" Value="{Binding Left}"/>
                <Setter Property="Grid.ColumnSpan" Value="{Binding Width}"/>
              </Style>
            </ItemsControl.ItemContainerStyle>
            <ItemsControl.ItemTemplate>
              <DataTemplate DataType="{x:Type viewModels:HighlightedStashGridCellViewModel}">
                <Border Background="{x:Null}"  
                        Margin="0" 
                        BorderThickness="3"
                        CornerRadius="2">
                  <Border.Style>
                    <Style TargetType="{x:Type Border}">
                      <Setter Property="BorderBrush">
                        <Setter.Value>
                          <LinearGradientBrush MappingMode="RelativeToBoundingBox">
                            <GradientStop Color="{StaticResource AccentBaseColor}" Offset="0" />
                            <GradientStop Color="{StaticResource HighlightColor}" Offset="0" />
                          </LinearGradientBrush>
                        </Setter.Value>
                      </Setter>
                      <Setter Property="RenderTransformOrigin" Value="0.5,0.5"></Setter>
                      <Setter Property="RenderTransform">
                        <Setter.Value>
                          <ScaleTransform ScaleX="1" ScaleY="1"/>
                        </Setter.Value>
                      </Setter>
                      <Setter Property="Effect">
                        <Setter.Value>
                          <DropShadowEffect ShadowDepth="0" Color="{StaticResource HighlightColor}" Opacity="1" BlurRadius="8" Direction="0"/>
                        </Setter.Value>
                      </Setter>
                      <Style.Triggers>
                        <DataTrigger Binding="{Binding IsFresh}" Value="True">
                          <DataTrigger.EnterActions>
                            <BeginStoryboard>
                              <Storyboard>
                                <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                                 Duration="0:0:1"
                                                 From="0"
                                                 To="1" />

                                <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)"
                                                 Duration="0:0:0.5"
                                                 From="1.5"
                                                 To="0.9" />
                                <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)"
                                                 Duration="0:0:0.5"
                                                 From="1.5"
                                                 To="0.9" />
                                <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)"
                                                 Duration="0:0:0.5"
                                                 BeginTime="0:0:0.5"
                                                 From="0.9"
                                                 To="1.1"
                                                 AutoReverse="True"
                                                 RepeatBehavior="Forever" />
                                <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)"
                                                 Duration="0:0:0.5"
                                                 BeginTime="0:0:0.5"
                                                 From="0.9"
                                                 To="1.1"
                                                 AutoReverse="True"
                                                 RepeatBehavior="Forever" />
                              </Storyboard>
                            </BeginStoryboard>
                          </DataTrigger.EnterActions>
                          <DataTrigger.ExitActions>
                            <BeginStoryboard>
                              <Storyboard>
                                <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                                 Duration="0:0:1"
                                                 To="0" />
                              </Storyboard>
                            </BeginStoryboard>
                          </DataTrigger.ExitActions>
                        </DataTrigger>
                      </Style.Triggers>
                    </Style>
                  </Border.Style>
                </Border>
              </DataTemplate>
            </ItemsControl.ItemTemplate>
          </ItemsControl>

        </Grid>
      </Grid>
    </Grid>
  </DataTemplate>
</ResourceDictionary>