<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:wpf="clr-namespace:PoeShared.Scaffolding.WPF;assembly=PoeShared"
                    xmlns:blue="http://www.nuget.org/Blue.MVVM"
                    xmlns:scaffolding="clr-namespace:PoeShared.Scaffolding;assembly=PoeShared"
                    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
                    xmlns:system="clr-namespace:System;assembly=mscorlib"
                    xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls"
                    xmlns:viewModels="clr-namespace:PoeEye.TradeMonitor.ViewModels"
                    xmlns:utilities="clr-namespace:PoeEye.Utilities"
                    xmlns:net="clr-namespace:FontAwesome.Net;assembly=FontAwesome.Net"
                    xmlns:modularity="clr-namespace:PoeEye.TradeMonitor.Modularity"
                    xmlns:scaffolding1="clr-namespace:PoeEye.TradeMonitor.Scaffolding">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/PoeShared;component/Themes/Generic.xaml" />
        <ResourceDictionary Source="pack://application:,,,/PoeTradeMonitor;component/Themes/Styles.xaml" />

    </ResourceDictionary.MergedDictionaries>

    <blue:BoolToVisibilityConverter x:Key="TrueToVisibleConverter"
                                    TrueValue="Visible"
                                    FalseValue="Collapsed" />

    <blue:BoolToVisibilityConverter x:Key="TrueToCollapsedConverter"
                                    TrueValue="Collapsed"
                                    FalseValue="Visible" />

    <blue:BoolToVisibilityConverter x:Key="TrueToVisibleFalseToHiddenConverter"
                                    TrueValue="Visible"
                                    FalseValue="Hidden" />

    <blue:BoolToVisibilityConverter x:Key="TrueToHiddenFalseToVisibleConverter"
                                    TrueValue="Hidden"
                                    FalseValue="Visible" />

    <blue:Int32ToVisibilityConverter x:Key="Int32GreatherThanZeroToVisibleConverterKey" 
                                     TrueValue="Visible" FalseValue="Hidden">
        <blue:Int32ToVisibilityConverter.ComparisonStrategy>
            <blue:Int32ComparisonStrategy Mode="GreaterThan" Comparand="0"/>
        </blue:Int32ToVisibilityConverter.ComparisonStrategy>
    </blue:Int32ToVisibilityConverter>

    <DataTemplate DataType="{x:Type viewModels:PoeTradeMonitorViewModel}">
        <DataTemplate.Resources>
            <Style TargetType="{x:Type ScrollBar}" BasedOn="{StaticResource SlimScrollBarStyleKey}" />
        </DataTemplate.Resources>
        <Grid x:Name="TradeMonitorOverlay">
            <Grid.Style>
                <Style TargetType="{x:Type Grid}">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding GrowUpwards}" Value="True">
                            <Setter Property="LayoutTransform">
                                <Setter.Value>
                                    <ScaleTransform ScaleY="1"></ScaleTransform>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Grid.Style>

            <Border
                Background="{StaticResource TradeMonitorBackgroundBrushKey}"
                BorderBrush="{StaticResource TradeMonitorBorderBrushKey}"
                Opacity="{Binding Opacity}"
                Visibility="{Binding IsLocked, Converter={StaticResource TrueToHiddenFalseToVisibleConverter}}"
                BorderThickness="1" />

            <Grid TextBlock.Foreground="{StaticResource PoeFontBrush}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="36" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>

                <!-- Header -->
                <Border Grid.Row="0"
                        wpf:EnableDragHelper.EnableDrag="True"
                        Background="{StaticResource TradeMonitorTitleBackgroundBrushKey}"
                        BorderBrush="{StaticResource TradeMonitorBorderBrushKey}"
                        BorderThickness="1"
                        LayoutTransform="{Binding ElementName=TradeMonitorOverlay, Path=LayoutTransform}"
                        Visibility="{Binding IsLocked, Converter={StaticResource TrueToHiddenFalseToVisibleConverter}}"
                        Margin="3">
                    <StackPanel Orientation="Horizontal">
                        <Button Command="{Binding LockWindowCommand}" Width="30" Height="30">
                            <Button.Style>
                                <Style TargetType="{x:Type Button}"
                                       BasedOn="{StaticResource TradeMonitorCircleButtonStyleKey}">
                                    <Setter Property="Content" Value="{x:Static net:FontAwesome.unlock}" />
                                    <Setter Property="Foreground" Value="Red" />
                                    <Setter Property="Padding" Value="0,2,0,0" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsLocked}" Value="True" />

                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Content" Value="{x:Static net:FontAwesome.lock}" />
                                            <Setter Property="Foreground" Value="GreenYellow" />
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>

                            <Button.Triggers>
                                <EventTrigger RoutedEvent="Mouse.MouseEnter">
                                    <EventTrigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation
                                                    Storyboard.TargetName="TradeMonitorBackground"
                                                    Storyboard.TargetProperty="Opacity"
                                                    From="1"
                                                    To="0.1"
                                                    Duration="0:0:1" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </EventTrigger.EnterActions>
                                </EventTrigger>
                                <EventTrigger RoutedEvent="Mouse.MouseLeave">
                                    <EventTrigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation
                                                    Storyboard.TargetName="TradeMonitorBackground"
                                                    Storyboard.TargetProperty="Opacity"
                                                    To="1"
                                                    Duration="0:0:1" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </EventTrigger.EnterActions>
                                </EventTrigger>
                            </Button.Triggers>
                        </Button>
                        <TextBlock Style="{StaticResource TradeMonitorTextBlockStyleKey}"
                                   Text="Trade Monitor"
                                   Foreground="#EEC64C"
                                   HorizontalAlignment="Center"
                                   FontWeight="Bold" />

                        <Button Content="Create fake trade"
                                Margin="10,0"
                                Height="22"
                                Style="{StaticResource TradeMonitorButtonStyleKey}"
                                HorizontalAlignment="Right" 
                                Width="180" 
                                Command="{Binding CreateFakeTradeCommand}" />
                    </StackPanel>
                </Border>

                <!-- Configuration -->
                <Border Grid.Row="1"
                        Background="{StaticResource TradeMonitorTitleBackgroundBrushKey}"
                        BorderBrush="{StaticResource TradeMonitorBorderBrushKey}"
                        BorderThickness="1"
                        Visibility="{Binding IsLocked, Converter={StaticResource TrueToHiddenFalseToVisibleConverter}}"
                        Margin="3"
                        LayoutTransform="{Binding ElementName=TradeMonitorOverlay, Path=LayoutTransform}">

                    <StackPanel Orientation="Vertical">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <TextBlock Grid.Column="0" MinWidth="100"
                                       Style="{StaticResource TradeMonitorTextBlockStyleKey}"
                                       TextAlignment="Right"
                                       Text="Unfold by default: " />

                            <Slider Grid.Column="1"
                                    Value="{Binding NumberOfNegotiationsToExpandByDefault}"
                                    Minimum="0"
                                    TickFrequency="1"
                                    IsSnapToTickEnabled="True"
                                    Margin="10,0"
                                    Maximum="{x:Static modularity:PoeTradeMonitorConfig.MaxNumberOfNegotiationsToExpand}" />

                            <TextBlock Grid.Column="2"
                                       Text="{Binding NumberOfNegotiationsToExpandByDefault}"
                                       TextAlignment="Left"
                                       Style="{StaticResource TradeMonitorTextBlockStyleKey}"
                                       Margin="5,0" />
                        </Grid>

                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <TextBlock Grid.Column="0" MinWidth="100"
                                       Style="{StaticResource TradeMonitorTextBlockStyleKey}"
                                       TextAlignment="Right"
                                       Text="Pre-group: " />

                            <Slider Grid.Column="1"
                                    Value="{Binding PreGroupNotificationsCount}"
                                    Minimum="1"
                                    TickFrequency="1"
                                    IsSnapToTickEnabled="True"
                                    Margin="10,0"
                                    Maximum="{x:Static modularity:PoeTradeMonitorConfig.MaxNumberOfNegotiationsToExpand}" />

                            <TextBlock Grid.Column="2"
                                       Text="{Binding PreGroupNotificationsCount}"
                                       TextAlignment="Left"
                                       Style="{StaticResource TradeMonitorTextBlockStyleKey}"
                                       Margin="5,0" />
                        </Grid>

                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="Grow upwards: "
                                       Style="{StaticResource TradeMonitorTextBlockStyleKey}"
                                       TextAlignment="Right"
                                       MinWidth="100" />
                            <controls:ToggleSwitchButton
                                IsChecked="{Binding GrowUpwards}"
                                Height="24"
                                Margin="10,0" />
                        </StackPanel>

                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <TextBlock Grid.Column="0" MinWidth="100"
                                       Style="{StaticResource TradeMonitorTextBlockStyleKey}"
                                       TextAlignment="Right"
                                       Text="Opacity: " />

                            <Slider Grid.Column="1"
                                    Value="{Binding Opacity}"
                                    Minimum="0"
                                    TickFrequency="0.1"
                                    IsSnapToTickEnabled="True"
                                    Margin="10,0"
                                    Maximum="1" />

                            <TextBlock Grid.Column="2"
                                       Text="{Binding Opacity}"
                                       TextAlignment="Left"
                                       Style="{StaticResource TradeMonitorTextBlockStyleKey}"
                                       Margin="5,0" />
                        </Grid>
                    </StackPanel>
                </Border>

                <!-- Body -->
                <Grid Grid.Row="2" 
                      Opacity="{Binding Opacity}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="24" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>

                    <Border Grid.Column="0" 
                            BorderThickness="1" 
                            BorderBrush="{StaticResource TradeMonitorBorderBrushKey}"
                            Background="{StaticResource TradeMonitorTitleBackgroundBrushKey}"
                            LayoutTransform="{Binding ElementName=TradeMonitorOverlay, Path=LayoutTransform}"
                            Visibility="{Binding NegotiationsOverflow, Converter={StaticResource Int32GreatherThanZeroToVisibleConverterKey}}"
                            Margin="5,5,0,5">
                        <Grid>
                            <TextBlock Style="{StaticResource TradeMonitorTextBlockStyleKey}"
                                       Text="{Binding Negotiations.Count}"
                                       VerticalAlignment="Top"
                                       HorizontalAlignment="Center"
                                       Margin="1"
                                       FontWeight="Bold"
                                       Foreground="{StaticResource TradeMonitorTextBrushKey}"
                                       Visibility="{Binding IsExpanded, Converter={StaticResource TrueToVisibleConverter}}"/>
                            <TextBlock Style="{StaticResource TradeMonitorTextBlockStyleKey}"
                                       Text="{Binding NegotiationsOverflow, StringFormat='+{0}'}"
                                       VerticalAlignment="Top"
                                       HorizontalAlignment="Center"
                                       Margin="1"
                                       FontWeight="Bold"
                                       Foreground="{StaticResource TradeMonitorTextBrushKey}"
                                       Visibility="{Binding IsExpanded, Converter={StaticResource TrueToCollapsedConverter}}"/>

                            <ToggleButton IsChecked="{Binding IsExpanded}"
                                      Background="Transparent">
                                <ToggleButton.Style>
                                    <Style TargetType="{x:Type ToggleButton}">
                                        <Setter Property="BorderThickness" Value="0"/>
                                        <Setter Property="Foreground" Value="{StaticResource AccentColorBrush2}"/>
                                        <Setter Property="FontFamily" Value="{StaticResource FontAwesome}"/>
                                        <Setter Property="FontSize" Value="24"/>
                                        <Setter Property="Focusable" Value="False"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsExpanded}" Value="True">
                                                <Setter Property="FontWeight" Value="Bold"/>
                                            </DataTrigger>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding IsExpanded}" Value="True" />
                                                    <Condition Binding="{Binding GrowUpwards}" Value="True" />
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="Content" Value="{x:Static net:FontAwesome.angle_double_down}" />
                                            </MultiDataTrigger>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding IsExpanded}" Value="False" />
                                                    <Condition Binding="{Binding GrowUpwards}" Value="True" />
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="Content" Value="{x:Static net:FontAwesome.angle_double_up}" />
                                            </MultiDataTrigger>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding IsExpanded}" Value="True" />
                                                    <Condition Binding="{Binding GrowUpwards}" Value="False" />
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="Content" Value="{x:Static net:FontAwesome.angle_double_up}" />
                                            </MultiDataTrigger>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding IsExpanded}" Value="False" />
                                                    <Condition Binding="{Binding GrowUpwards}" Value="False" />
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="Content" Value="{x:Static net:FontAwesome.angle_double_down}" />
                                            </MultiDataTrigger>
                                        </Style.Triggers>
                                    </Style>

                                </ToggleButton.Style>
                            </ToggleButton>

                        </Grid>

                    </Border>


                    <ItemsControl Grid.Column="1"
                                  ItemsSource="{Binding Negotiations}"
                                  ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                                  ScrollViewer.VerticalScrollBarVisibility="Disabled">
                        <ItemsControl.Style>
                            <Style TargetType="{x:Type ItemsControl}">
                                <Setter Property="Focusable" Value="False" />
                                <Setter Property="IsTabStop" Value="False" />
                                <Setter Property="Background" Value="Transparent" />
                                <Setter Property="ItemsPanel">
                                    <Setter.Value>
                                        <ItemsPanelTemplate>
                                            <StackPanel HorizontalAlignment="Stretch"
                                                                    Background="Transparent"
                                                                    LayoutTransform="{Binding ElementName=TradeMonitorOverlay, Path=LayoutTransform}"
                                                                    VerticalAlignment="Top" />
                                        </ItemsPanelTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="ItemsControl">
                                            <Border
                                                BorderThickness="{TemplateBinding Border.BorderThickness}"
                                                Padding="{TemplateBinding Control.Padding}"
                                                BorderBrush="{TemplateBinding Border.BorderBrush}"
                                                Background="{TemplateBinding Panel.Background}"
                                                SnapsToDevicePixels="True">
                                                <ItemsPresenter SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding GrowUpwards}" Value="True">
                                        <Setter Property="ItemsPanel">
                                            <Setter.Value>
                                                <ItemsPanelTemplate>
                                                    <StackPanel HorizontalAlignment="Stretch"
                                                                            Background="Transparent"
                                                                            LayoutTransform="{Binding ElementName=TradeMonitorOverlay, Path=LayoutTransform}"
                                                                            VerticalAlignment="Bottom" />
                                                </ItemsPanelTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Negotiations.Count}" Value="0">
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </ItemsControl.Style>
                    </ItemsControl>
                </Grid>

            </Grid>
        </Grid>
    </DataTemplate>
</ResourceDictionary>