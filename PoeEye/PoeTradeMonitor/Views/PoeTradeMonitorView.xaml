<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:wpf="clr-namespace:PoeShared.Scaffolding.WPF;assembly=PoeShared"
                    xmlns:blue="http://www.nuget.org/Blue.MVVM"
                    xmlns:scaffolding="clr-namespace:PoeShared.Scaffolding;assembly=PoeShared"
                    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
                    xmlns:system="clr-namespace:System;assembly=mscorlib"
                    xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls"
                    xmlns:viewModels="clr-namespace:PoeEye.TradeMonitor.ViewModels"
                    xmlns:utilities="clr-namespace:PoeEye.Utilities"
                    xmlns:modularity="clr-namespace:PoeEye.TradeMonitor.Modularity"
                    xmlns:scaffolding1="clr-namespace:PoeEye.TradeMonitor.Scaffolding"
                    xmlns:themes="clr-namespace:PoeEye.TradeMonitor.Themes"
                    xmlns:fa="http://schemas.fontawesome.io/icons/">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/PoeShared;component/Themes/Generic.xaml" />
        <ResourceDictionary Source="pack://application:,,,/PoeTradeMonitor;component/Themes/Styles.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <blue:Int32ToVisibilityConverter x:Key="Int32GreaterThanZeroToVisibleConverterKey"
                                     TrueValue="Visible" FalseValue="Hidden">
        <blue:Int32ToVisibilityConverter.ComparisonStrategy>
            <blue:Int32ComparisonStrategy Mode="GreaterThan" Comparand="0" />
        </blue:Int32ToVisibilityConverter.ComparisonStrategy>
    </blue:Int32ToVisibilityConverter>

    <DataTemplate DataType="{x:Type viewModels:PoeTradeMonitorViewModel}">
        <DataTemplate.Resources>
            <Style TargetType="{x:Type ScrollBar}" BasedOn="{StaticResource SlimScrollBarStyleKey}" />
            <Style TargetType="{x:Type Slider}" BasedOn="{StaticResource TradeMonitorSliderStyleKey}" />
        </DataTemplate.Resources>
        <DockPanel x:Name="TradeMonitorOverlay" LastChildFill="True">
            <!-- Configuration -->
            <Border DockPanel.Dock="Top"
                    Background="{StaticResource TradeMonitorTitleBackgroundBrushKey}"
                    BorderBrush="{StaticResource TradeMonitorBorderBrushKey}"
                    BorderThickness="1"
                    Visibility="{Binding IsLocked, Converter={StaticResource TrueToHiddenFalseToVisibleConverter}}"
                    Margin="3">

                <StackPanel Orientation="Vertical">
                    <StackPanel Orientation="Horizontal" Margin="0,3">
                        <TextBlock Text="Expand on hover: "
                                   Style="{StaticResource TradeMonitorTextBlockStyleKey}"
                                   TextAlignment="Right"
                                   MinWidth="100" />
                        <controls:ToggleSwitchButton
                            IsChecked="{Binding ExpandOnHover}"
                            Height="24"
                            Margin="10,0" />
                    </StackPanel>

                    <DockPanel IsEnabled="{Binding ExpandOnHover, Converter={StaticResource NotConverter}}"
                               Margin="0,3"
                               LastChildFill="True">
                        <TextBlock DockPanel.Dock="Left" MinWidth="100"
                                   Style="{StaticResource TradeMonitorTextBlockStyleKey}"
                                   TextAlignment="Right"
                                   Text="Unfold by default: " />

                        <TextBlock DockPanel.Dock="Right"
                                   Text="{Binding NumberOfNegotiationsToExpandByDefault}"
                                   MinWidth="50"
                                   TextAlignment="Left"
                                   Style="{StaticResource TradeMonitorTextBlockStyleKey}"
                                   Margin="5,0" />

                        <Slider
                            Value="{Binding NumberOfNegotiationsToExpandByDefault}"
                            Minimum="0"
                            TickFrequency="1"
                            IsSnapToTickEnabled="True"
                            Margin="10,0"
                            Maximum="{x:Static modularity:PoeTradeMonitorConfig.MaxNumberOfNegotiationsToExpand}" />
                    </DockPanel>

                    <DockPanel Margin="0,3" LastChildFill="True">
                        <TextBlock DockPanel.Dock="Left" MinWidth="100"
                                   Style="{StaticResource TradeMonitorTextBlockStyleKey}"
                                   TextAlignment="Right"
                                   Text="Pre-group: " />

                        <TextBlock DockPanel.Dock="Right"
                                   MinWidth="50"
                                   Text="{Binding PreGroupNotificationsCount}"
                                   TextAlignment="Left"
                                   Style="{StaticResource TradeMonitorTextBlockStyleKey}"
                                   Margin="5,0" />

                        <Slider
                            Value="{Binding PreGroupNotificationsCount}"
                            Minimum="1"
                            TickFrequency="1"
                            IsSnapToTickEnabled="True"
                            Margin="10,0"
                            Maximum="{x:Static modularity:PoeTradeMonitorConfig.MaxNumberOfNegotiationsToExpand}" />
                    </DockPanel>

                    <StackPanel Margin="0,3" Orientation="Horizontal">
                        <TextBlock Text="Grow upwards: " DockPanel.Dock="Left"
                                   Style="{StaticResource TradeMonitorTextBlockStyleKey}"
                                   TextAlignment="Right"
                                   MinWidth="100" />
                        <controls:ToggleSwitchButton DockPanel.Dock="Left"
                                                     IsChecked="{Binding GrowUpwards}"
                                                     Height="24"
                                                     Margin="10,0" />
                    </StackPanel>

                    <DockPanel Margin="0,3" LastChildFill="True">
                        <TextBlock DockPanel.Dock="Left" MinWidth="100"
                                   Style="{StaticResource TradeMonitorTextBlockStyleKey}"
                                   TextAlignment="Right"
                                   Text="Opacity: " />

                        <TextBlock DockPanel.Dock="Right"
                                   MinWidth="50"
                                   Text="{Binding Opacity}"
                                   TextAlignment="Left"
                                   Style="{StaticResource TradeMonitorTextBlockStyleKey}"
                                   Margin="5,0" />

                        <Slider
                            Value="{Binding Opacity}"
                            Minimum="0"
                            TickFrequency="0.1"
                            IsSnapToTickEnabled="True"
                            Margin="10,0"
                            Maximum="1" />
                    </DockPanel>

                    <Button Content="Create fake trade request"
                            Margin="10,5"
                            Height="22"
                            HorizontalAlignment="Right"
                            DockPanel.Dock="Top"
                            Visibility="{Binding IsLocked, Converter={StaticResource TrueToCollapsedFalseToVisibleConverter}}"
                            Command="{Binding CreateFakeTradeCommand}" />
                </StackPanel>
            </Border>
            
            <!-- Body -->
            <Grid DockPanel.Dock="Bottom"
                  Margin="3">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" MinWidth="30" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>

                <Grid.RowDefinitions>
                    <RowDefinition Height="*" />
                    <!-- Trying to fix WPF resize flickering -->
                    <RowDefinition Height="Auto" MinHeight="20" />
                </Grid.RowDefinitions>

                <Border Grid.Row="0" Grid.Column="0"
                        x:Name="NegotiationsOverflowControl"
                        BorderThickness="1"
                        BorderBrush="{StaticResource TradeMonitorBorderBrushKey}"
                        Background="{StaticResource TradeMonitorTitleBackgroundBrushKey}"
                        Visibility="{Binding NegotiationsOverflow, Converter={StaticResource Int32GreaterThanZeroToVisibleConverterKey}}"
                        Margin="3,1">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>

                        <Button fa:Awesome.Content="Close"
                                Foreground="{StaticResource TextBrush}"
                                Command="{Binding CloseAllNegotiations}"
                                ToolTip="Close all negotiations"
                                FontSize="9" Width="20" Height="20" Padding="0"
                                Margin="2,2" />

                        <TextBlock Grid.Row="1"
                                   Style="{StaticResource TradeMonitorTextBlockStyleKey}"
                                   Text="{Binding Negotiations.Count}"
                                   VerticalAlignment="Top"
                                   HorizontalAlignment="Center"
                                   Margin="2"
                                   FontWeight="Bold"
                                   Foreground="{StaticResource TradeMonitorTextBrushKey}"
                                   Visibility="{Binding IsExpanded, Converter={StaticResource TrueToVisibleFalseToCollapsedConverter}}" />
                        <TextBlock Grid.Row="1"
                                   Style="{StaticResource TradeMonitorTextBlockStyleKey}"
                                   Text="{Binding NegotiationsOverflow, StringFormat='+{0}'}"
                                   VerticalAlignment="Top"
                                   HorizontalAlignment="Center"
                                   Margin="1"
                                   FontWeight="Bold"
                                   Foreground="{StaticResource TradeMonitorTextBrushKey}"
                                   Visibility="{Binding IsExpanded, Converter={StaticResource TrueToCollapsedFalseToVisibleConverter}}" />

                        <ToggleButton Grid.Row="1"
                                      IsChecked="{Binding IsExpanded}"
                                      Background="Transparent">
                            <ToggleButton.Style>
                                <Style TargetType="{x:Type ToggleButton}">
                                    <Setter Property="BorderThickness" Value="0" />
                                    <Setter Property="Foreground" Value="{StaticResource AccentColorBrush2}" />
                                    <Setter Property="FontFamily" Value="{StaticResource FontAwesome}" />
                                    <Setter Property="FontSize" Value="24" />
                                    <Setter Property="Focusable" Value="False" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsExpanded}" Value="True">
                                            <Setter Property="FontWeight" Value="Bold" />
                                        </DataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsExpanded}" Value="True" />
                                                <Condition Binding="{Binding GrowUpwards}" Value="True" />
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="fa:Awesome.Content" Value="AngleDoubleDown" />
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsExpanded}" Value="False" />
                                                <Condition Binding="{Binding GrowUpwards}" Value="True" />
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="fa:Awesome.Content" Value="AngleDoubleUp" />
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsExpanded}" Value="True" />
                                                <Condition Binding="{Binding GrowUpwards}" Value="False" />
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="fa:Awesome.Content" Value="AngleDoubleUp" />
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsExpanded}" Value="False" />
                                                <Condition Binding="{Binding GrowUpwards}" Value="False" />
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="fa:Awesome.Content" Value="AngleDoubleDown" />
                                        </MultiDataTrigger>
                                    </Style.Triggers>
                                </Style>

                            </ToggleButton.Style>
                        </ToggleButton>
                    </Grid>
                </Border>

                <ItemsControl Grid.Row="0" Grid.Column="1"
                              ItemsSource="{Binding Negotiations}"
                              ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                              ScrollViewer.VerticalScrollBarVisibility="Disabled">
                    <ItemsControl.Style>
                        <Style TargetType="{x:Type ItemsControl}">
                            <Setter Property="Focusable" Value="False" />
                            <Setter Property="IsTabStop" Value="False" />
                            <Setter Property="Background" Value="Transparent" />
                            <Setter Property="themes:TradeMonitorExpanderHelper.ExpanderDirection" Value="Down" />
                            <Setter Property="themes:TradeMonitorExpanderHelper.ExpandOnHover"
                                    Value="{Binding ExpandOnHover}" />
                            <Setter Property="ItemsPanel">
                                <Setter.Value>
                                    <ItemsPanelTemplate>
                                        <StackPanel HorizontalAlignment="Stretch"
                                                    Background="Transparent"
                                                    VerticalAlignment="Top" />
                                    </ItemsPanelTemplate>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="ItemTemplate">
                                <Setter.Value>
                                    <DataTemplate>
                                        <ContentControl Content="{Binding}" Margin="0,1" />
                                    </DataTemplate>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="ItemsControl">
                                        <Border
                                            BorderThickness="{TemplateBinding Border.BorderThickness}"
                                            Padding="{TemplateBinding Control.Padding}"
                                            BorderBrush="{TemplateBinding Border.BorderBrush}"
                                            Background="{TemplateBinding Panel.Background}"
                                            SnapsToDevicePixels="True">
                                            <ItemsPresenter
                                                SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                                        </Border>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding GrowUpwards}" Value="True">
                                    <Setter Property="themes:TradeMonitorExpanderHelper.ExpanderDirection" Value="Up" />
                                    <Setter Property="ItemsPanel">
                                        <Setter.Value>
                                            <ItemsPanelTemplate>
                                                <StackPanel HorizontalAlignment="Stretch"
                                                            Background="Transparent"
                                                            VerticalAlignment="Bottom" />
                                            </ItemsPanelTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Negotiations.Count}" Value="0">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </ItemsControl.Style>
                </ItemsControl>
            </Grid>

        </DockPanel>

    </DataTemplate>
</ResourceDictionary>